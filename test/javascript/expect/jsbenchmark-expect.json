{"/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\nLine 14: __taint_sink(arg)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  argument_passing_value_001_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: argument_passing_value_001_T\n  19:  CALL:  argument_passing_value_001_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function argument_passing_value_001_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: process\n  11:  CALL:    process(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: arg\n  13:  ARG PASS:    function process (arg) {\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(arg)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\nLine 14: __taint_sink(arg)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\",\"functionName\":\"argument_passing_value_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function argument_passing_value_001_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: process\n  11:  CALL:    process(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: arg\n  13:  ARG PASS:    function process (arg) {\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(arg)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\nLine 15: __taint_sink(arg1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  argument_passing_value_003_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: argument_passing_value_003_T\n  20:  CALL:  argument_passing_value_003_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function argument_passing_value_003_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: process\n  12:  CALL:    process(__taint_src, '_')\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: arg1\n  14:  ARG PASS:    function process (arg1, arg2) {\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(arg1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\nLine 15: __taint_sink(arg1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\",\"functionName\":\"argument_passing_value_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function argument_passing_value_003_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: process\n  12:  CALL:    process(__taint_src, '_')\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: arg1\n  14:  ARG PASS:    function process (arg1, arg2) {\n /jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(arg1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/context_sensitive/argument_value_passing/argument_passing_value_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\nLine 13: __taint_sink(a)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  argument_passing_value_001_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: argument_passing_value_001_T\n  21:  CALL:  argument_passing_value_001_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function argument_passing_value_001_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: process\n  11:  CALL:    let a = process(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: arg\n  15:  ARG PASS:    function process (arg) {\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:      return arg\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: process\n  11:  CALL RETURN:   let a = process(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: a\n  11:  Var Pass:    let a = process(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: __taint_sink\n  13:  SINK:    __taint_sink(a)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\nLine 13: __taint_sink(a)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\",\"functionName\":\"argument_passing_value_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function argument_passing_value_001_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: process\n  11:  CALL:    let a = process(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: arg\n  15:  ARG PASS:    function process (arg) {\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:      return arg\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: process\n  11:  CALL RETURN:   let a = process(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: a\n  11:  Var Pass:    let a = process(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_001_T\n  AffectedNodeName: __taint_sink\n  13:  SINK:    __taint_sink(a)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/context_sensitive/multi_invoke/multi_invoke_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\nLine 27: __taint_sink(sub.call())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: __taint_src\n  32:  SOURCE:  polymorphism_001_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: polymorphism_001_T\n  32:  CALL:  polymorphism_001_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function polymorphism_001_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:        return __taint_src\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: call\n  27:  CALL RETURN:   __taint_sink(sub.call())\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: __taint_sink\n  27:  SINK:    __taint_sink(sub.call())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\nLine 27: __taint_sink(sub.call())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\",\"functionName\":\"polymorphism_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function polymorphism_001_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:        return __taint_src\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: call\n  27:  CALL RETURN:   __taint_sink(sub.call())\n /jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_001_T\n  AffectedNodeName: __taint_sink\n  27:  SINK:    __taint_sink(sub.call())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_003_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/context_sensitive/polymorphism/polymorphism_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\nLine 12: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  return_value_passing_001_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: return_value_passing_001_T\n  20:  CALL:  return_value_passing_001_T(__taint_src)\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function return_value_passing_001_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: [return value]\n  15:  Return Value:      return __taint_src\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: process\n  11:  CALL RETURN:   let data = process()\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: data\n  11:  Var Pass:    let data = process()\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\nLine 12: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\",\"functionName\":\"return_value_passing_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function return_value_passing_001_T (__taint_src) {\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: [return value]\n  15:  Return Value:      return __taint_src\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: process\n  11:  CALL RETURN:   let data = process()\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: data\n  11:  Var Pass:    let data = process()\n /jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_001_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/context_sensitive/return_value_passing/return_value_passing_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/array_007_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/array_007_T\nLine 14: __taint_sink(s.0)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/array_007_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/array_007_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  array_007_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/array_007_T\n  AffectedNodeName: array_007_T\n  19:  CALL:  array_007_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/array_007_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function array_007_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/array_007_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [__taint_src, 'b', 'c']\n /jsbenchmark/accuracy/field_sensitive/array/array_007_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(s[0])\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/array_007_T\nLine 14: __taint_sink(s.0)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/array_007_T\",\"functionName\":\"array_007_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/array_007_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function array_007_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/array_007_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [__taint_src, 'b', 'c']\n /jsbenchmark/accuracy/field_sensitive/array/array_007_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(s[0])\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/array_008_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/array_009_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/array_009_T\nLine 15: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/array_009_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/array_009_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  array_009_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/array_009_T\n  AffectedNodeName: array_009_T\n  20:  CALL:  array_009_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/array_009_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function array_009_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/array_009_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [__taint_src, 'b', 'c']\n /jsbenchmark/accuracy/field_sensitive/array/array_009_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/array_009_T\nLine 15: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/array_009_T\",\"functionName\":\"array_009_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/array_009_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function array_009_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/array_009_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [__taint_src, 'b', 'c']\n /jsbenchmark/accuracy/field_sensitive/array/array_009_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/array_010_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/array_011_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/array_011_T\nLine 14: __taint_sink(s.0.0)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/array_011_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/array_011_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  array_011_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/array_011_T\n  AffectedNodeName: array_011_T\n  19:  CALL:  array_011_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/array_011_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function array_011_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/array_011_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [[__taint_src], ['b'], 'c']\n /jsbenchmark/accuracy/field_sensitive/array/array_011_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(s[0][0])\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/array_011_T\nLine 14: __taint_sink(s.0.0)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/array_011_T\",\"functionName\":\"array_011_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/array_011_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function array_011_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/array_011_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [[__taint_src], ['b'], 'c']\n /jsbenchmark/accuracy/field_sensitive/array/array_011_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(s[0][0])\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/array_012_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/array_013_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/array_014_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\nLine 17: __taint_sink(args.1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  rest_parameter_007_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: rest_parameter_007_T\n  22:  CALL:  rest_parameter_007_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function rest_parameter_007_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: collectArgs\n  13:  CALL:    collectArgs('prefix', __taint_src, 'suffix')\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: __tmp0__\n  16:  ARG PASS:  function collectArgs (...args) {\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: args\n  16:  Var Pass: function collectArgs (...args) {\n  17:  Var Pass:   __taint_sink(args[1])\n  18:  Var Pass: }\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(args[1])\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\nLine 17: __taint_sink(args.1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\",\"functionName\":\"rest_parameter_007_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function rest_parameter_007_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: collectArgs\n  13:  CALL:    collectArgs('prefix', __taint_src, 'suffix')\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: __tmp0__\n  16:  ARG PASS:  function collectArgs (...args) {\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: args\n  16:  Var Pass: function collectArgs (...args) {\n  17:  Var Pass:   __taint_sink(args[1])\n  18:  Var Pass: }\n /jsbenchmark/accuracy/field_sensitive/array/rest_parameter_007_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(args[1])\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/rest_parameter_008_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\nLine 15: __taint_sink(array.3)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  spread_operator_005_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: spread_operator_005_T\n  20:  CALL:  spread_operator_005_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function spread_operator_005_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: array1\n  13:  Var Pass:    let array1 = ['a', 'b', __taint_src]\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: array\n  14:  Var Pass:    let array = ['c', ...array1]\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(array[3])\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\nLine 15: __taint_sink(array.3)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\",\"functionName\":\"spread_operator_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function spread_operator_005_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: array1\n  13:  Var Pass:    let array1 = ['a', 'b', __taint_src]\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: array\n  14:  Var Pass:    let array = ['c', ...array1]\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_005_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(array[3])\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/spread_operator_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\nLine 16: __taint_sink(rest.0)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  spread_operator_007_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: spread_operator_007_T\n  21:  CALL:  spread_operator_007_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function spread_operator_007_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: foo\n  13:  Var Pass:    const foo = __taint_src;\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: __tmp0__\n  15:  Var Pass:    const [ r1, r2, ...rest ] = [ 123, 456,foo,bar ];\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: rest\n  15:  Var Pass:   const [ r1, r2, ...rest ] = [ 123, 456,foo,bar ];\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(rest[0])\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\nLine 16: __taint_sink(rest.0)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\",\"functionName\":\"spread_operator_007_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function spread_operator_007_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: foo\n  13:  Var Pass:    const foo = __taint_src;\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: __tmp0__\n  15:  Var Pass:    const [ r1, r2, ...rest ] = [ 123, 456,foo,bar ];\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: rest\n  15:  Var Pass:   const [ r1, r2, ...rest ] = [ 123, 456,foo,bar ];\n /jsbenchmark/accuracy/field_sensitive/array/spread_operator_007_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(rest[0])\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/array/spread_operator_008_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\nLine 21: __taint_sink(obj.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  constructor_field_001_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: constructor_field_001_T\n  26:  CALL:  constructor_field_001_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function constructor_field_001_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = __taint_src\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: obj\n  20:  Var Pass:    let obj = new A()\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(obj.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\nLine 21: __taint_sink(obj.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\",\"functionName\":\"constructor_field_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function constructor_field_001_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = __taint_src\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: obj\n  20:  Var Pass:    let obj = new A()\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(obj.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\nLine 21: __taint_sink(obj.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  constructor_field_004_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: constructor_field_004_T\n  26:  CALL:  constructor_field_004_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function constructor_field_004_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: constructor\n  20:  CALL:    let obj = new A(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: param\n  14:  ARG PASS:      constructor (param) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = param\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: obj\n  20:  Var Pass:    let obj = new A(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(obj.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\nLine 21: __taint_sink(obj.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\",\"functionName\":\"constructor_field_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function constructor_field_004_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: constructor\n  20:  CALL:    let obj = new A(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: param\n  14:  ARG PASS:      constructor (param) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = param\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: obj\n  20:  Var Pass:    let obj = new A(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/constructor_field_004_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(obj.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\nLine 15: __taint_sink(c.__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  destructuring_assignment_009_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: destructuring_assignment_009_T\n  20:  CALL:  destructuring_assignment_009_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function destructuring_assignment_009_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = { a: '_', b: '_', c: { __taint_src, d: 'a' } }\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: c\n  14:  Var Pass:    let { a, b, c } = arr\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(c.__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\nLine 15: __taint_sink(c.__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\",\"functionName\":\"destructuring_assignment_009_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function destructuring_assignment_009_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = { a: '_', b: '_', c: { __taint_src, d: 'a' } }\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: c\n  14:  Var Pass:    let { a, b, c } = arr\n /jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_009_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(c.__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/destructuring_assignment_010_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\nLine 33: __taint_sink(a.b.c.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: __taint_src\n  38:  SOURCE:  field_len_001_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: field_len_001_T\n  38:  CALL:  field_len_001_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function field_len_001_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: [this.data]\n  27:  Var Pass:       this.data = __taint_src\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: [this.c]\n  21:  Var Pass:       this.c = new C()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: [this.b]\n  15:  Var Pass:       this.b = new B()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: a\n  32:  Var Pass:    const a = new A()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: __taint_sink\n  33:  SINK:    __taint_sink(a.b.c.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\nLine 33: __taint_sink(a.b.c.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\",\"functionName\":\"field_len_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function field_len_001_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: [this.data]\n  27:  Var Pass:       this.data = __taint_src\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: [this.c]\n  21:  Var Pass:       this.c = new C()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: [this.b]\n  15:  Var Pass:       this.b = new B()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: a\n  32:  Var Pass:    const a = new A()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_001_T\n  AffectedNodeName: __taint_sink\n  33:  SINK:    __taint_sink(a.b.c.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\nLine 44: __taint_sink(s1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: __taint_src\n  49:  SOURCE:  field_len_003_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: field_len_003_T\n  49:  CALL:  field_len_003_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function field_len_003_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.data]\n  36:  Var Pass:       this.data = __taint_src\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.f]\n  31:  Var Pass:     constructor () {this.f = new F()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.e]\n  27:  Var Pass:     constructor () {this.e = new E()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.d]\n  23:  Var Pass:     constructor () {this.d = new D()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.c]\n  18:  Var Pass:     constructor () {this.c = new C()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.b]\n  14:  Var Pass:     constructor () {this.b = new B()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: a\n  41:  Var Pass:    const a = new A()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: s\n  42:  Var Pass:    const s = a.b.c\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: s1\n  43:  Var Pass:    const s1 = s.d.e.f.data\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: __taint_sink\n  44:  SINK:    __taint_sink(s1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\nLine 44: __taint_sink(s1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\",\"functionName\":\"field_len_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function field_len_003_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.data]\n  36:  Var Pass:       this.data = __taint_src\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.f]\n  31:  Var Pass:     constructor () {this.f = new F()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.e]\n  27:  Var Pass:     constructor () {this.e = new E()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.d]\n  23:  Var Pass:     constructor () {this.d = new D()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.c]\n  18:  Var Pass:     constructor () {this.c = new C()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: [this.b]\n  14:  Var Pass:     constructor () {this.b = new B()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: a\n  41:  Var Pass:    const a = new A()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: s\n  42:  Var Pass:    const s = a.b.c\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: s1\n  43:  Var Pass:    const s1 = s.d.e.f.data\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_003_T\n  AffectedNodeName: __taint_sink\n  44:  SINK:    __taint_sink(s1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\nLine 66: __taint_sink(a.b.c.d.e.f.g.h.i.j.k.l.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: __taint_src\n  70:  SOURCE:  field_len_005_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: field_len_005_T\n  70:  CALL:  field_len_005_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function field_len_005_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.data]\n  60:  Var Pass:       this.data = __taint_src\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.l]\n  55:  Var Pass:     constructor () {this.l = new L()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.k]\n  51:  Var Pass:     constructor () {this.k = new K()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.j]\n  47:  Var Pass:     constructor () {this.j = new J()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.i]\n  43:  Var Pass:     constructor () {this.i = new I()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.h]\n  39:  Var Pass:     constructor () {this.h = new H()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.g]\n  35:  Var Pass:     constructor () {this.g = new G()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.f]\n  31:  Var Pass:     constructor () {this.f = new F()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.e]\n  27:  Var Pass:     constructor () {this.e = new E()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.d]\n  23:  Var Pass:     constructor () {this.d = new D()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.c]\n  18:  Var Pass:     constructor () {this.c = new C()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.b]\n  14:  Var Pass:     constructor () {this.b = new B()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: a\n  65:  Var Pass:    const a = new A()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: __taint_sink\n  66:  SINK:    __taint_sink(a.b.c.d.e.f.g.h.i.j.k.l.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\nLine 66: __taint_sink(a.b.c.d.e.f.g.h.i.j.k.l.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\",\"functionName\":\"field_len_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function field_len_005_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.data]\n  60:  Var Pass:       this.data = __taint_src\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.l]\n  55:  Var Pass:     constructor () {this.l = new L()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.k]\n  51:  Var Pass:     constructor () {this.k = new K()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.j]\n  47:  Var Pass:     constructor () {this.j = new J()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.i]\n  43:  Var Pass:     constructor () {this.i = new I()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.h]\n  39:  Var Pass:     constructor () {this.h = new H()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.g]\n  35:  Var Pass:     constructor () {this.g = new G()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.f]\n  31:  Var Pass:     constructor () {this.f = new F()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.e]\n  27:  Var Pass:     constructor () {this.e = new E()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.d]\n  23:  Var Pass:     constructor () {this.d = new D()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.c]\n  18:  Var Pass:     constructor () {this.c = new C()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: [this.b]\n  14:  Var Pass:     constructor () {this.b = new B()}\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: a\n  65:  Var Pass:    const a = new A()\n /jsbenchmark/accuracy/field_sensitive/interface_class/field_len_005_T\n  AffectedNodeName: __taint_sink\n  66:  SINK:    __taint_sink(a.b.c.d.e.f.g.h.i.j.k.l.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/field_len_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\nLine 18: __taint_sink({with(params)}.id)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  rest_parameter_009_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\n  AffectedNodeName: rest_parameter_009_T\n  23:  CALL:  rest_parameter_009_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function rest_parameter_009_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\n  AffectedNodeName: params\n  13:  Var Pass:    const params = {\n  14:  Var Pass:      name: 'Tony',\n  15:  Var Pass:      age: '12',\n  16:  Var Pass:      id: __taint_src,\n  17:  Var Pass:    }\n /jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink({ ...params }.id)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\nLine 18: __taint_sink({with(params)}.id)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\",\"functionName\":\"rest_parameter_009_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function rest_parameter_009_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\n  AffectedNodeName: params\n  13:  Var Pass:    const params = {\n  14:  Var Pass:      name: 'Tony',\n  15:  Var Pass:      age: '12',\n  16:  Var Pass:      id: __taint_src,\n  17:  Var Pass:    }\n /jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_009_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink({ ...params }.id)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/rest_parameter_010_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\nLine 22: __taint_sink(newParams.id)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: __taint_src\n  27:  SOURCE:  spread_operator_007_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: spread_operator_007_T\n  27:  CALL:  spread_operator_007_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function spread_operator_007_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: params\n  13:  Var Pass:    const params = {\n  14:  Var Pass:      name: 'Tony',\n  15:  Var Pass:      age: '12',\n  16:  Var Pass:      id: __taint_src,\n  17:  Var Pass:    }\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: newParams\n  18:  Var Pass:    const newParams = {\n  19:  Var Pass:      score: 100,\n  20:  Var Pass:      ...params,\n  21:  Var Pass:    }\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: __taint_sink\n  22:  SINK:    __taint_sink(newParams.id)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\nLine 22: __taint_sink(newParams.id)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\",\"functionName\":\"spread_operator_007_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function spread_operator_007_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: params\n  13:  Var Pass:    const params = {\n  14:  Var Pass:      name: 'Tony',\n  15:  Var Pass:      age: '12',\n  16:  Var Pass:      id: __taint_src,\n  17:  Var Pass:    }\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: newParams\n  18:  Var Pass:    const newParams = {\n  19:  Var Pass:      score: 100,\n  20:  Var Pass:      ...params,\n  21:  Var Pass:    }\n /jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_007_T\n  AffectedNodeName: __taint_sink\n  22:  SINK:    __taint_sink(newParams.id)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/interface_class/spread_operator_008_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\nLine 16: __taint_sink(map.get(key1))\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  map_field_sensitive_001_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\n  AffectedNodeName: map_field_sensitive_001_T\n  20:  CALL:  map_field_sensitive_001_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function map_field_sensitive_001_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\n  AffectedNodeName: set\n  14:  CALL:    map.set('key1', __taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(map.get('key1'))\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\nLine 16: __taint_sink(map.get(key1))\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\",\"functionName\":\"map_field_sensitive_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function map_field_sensitive_001_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\n  AffectedNodeName: set\n  14:  CALL:    map.set('key1', __taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(map.get('key1'))\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\nLine 18: __taint_sink(map.get(key2))\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  map_field_sensitive_004_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\n  AffectedNodeName: map_field_sensitive_004_T\n  23:  CALL:  map_field_sensitive_004_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function map_field_sensitive_004_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\n  AffectedNodeName: set\n  16:  CALL:    map.set('key2', __taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(map.get('key2'))\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\nLine 18: __taint_sink(map.get(key2))\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\",\"functionName\":\"map_field_sensitive_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function map_field_sensitive_004_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\n  AffectedNodeName: set\n  16:  CALL:    map.set('key2', __taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_004_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(map.get('key2'))\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_005_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\nLine 16: __taint_sink(map.values())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  map_field_sensitive_006_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\n  AffectedNodeName: map_field_sensitive_006_T\n  20:  CALL:  map_field_sensitive_006_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function map_field_sensitive_006_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\n  AffectedNodeName: set\n  14:  CALL:    map.set('key1', __taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(map.values())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\nLine 16: __taint_sink(map.values())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\",\"functionName\":\"map_field_sensitive_006_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function map_field_sensitive_006_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\n  AffectedNodeName: set\n  14:  CALL:    map.set('key1', __taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_006_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(map.values())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_007_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\nLine 16: __taint_sink(map.keys())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  map_object_sensitive_008_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\n  AffectedNodeName: map_object_sensitive_008_T\n  20:  CALL:  map_object_sensitive_008_T(__taint_src)\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function map_object_sensitive_008_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\n  AffectedNodeName: set\n  14:  CALL:    map.set(__taint_src, 'value1')\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(map.keys())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\nLine 16: __taint_sink(map.keys())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\",\"functionName\":\"map_object_sensitive_008_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function map_object_sensitive_008_T (__taint_src) {\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\n  AffectedNodeName: set\n  14:  CALL:    map.set(__taint_src, 'value1')\n /jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_008_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(map.keys())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/field_sensitive/map/map_field_sensitive_009_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\nLine 15: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\n  AffectedNodeName: __taint_src\n  28:  SOURCE:  asynchronous_await_001_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\n  AffectedNodeName: asynchronous_await_001_T\n  28:  CALL:  asynchronous_await_001_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  async function asynchronous_await_001_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\n  AffectedNodeName: resolve\n  20:  CALL:          resolve(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\nLine 15: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\",\"functionName\":\"asynchronous_await_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  async function asynchronous_await_001_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\n  AffectedNodeName: resolve\n  20:  CALL:          resolve(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/asynchronous/asynchronous_await_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\nLine 16: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  dowhile_body_003_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\n  AffectedNodeName: dowhile_body_003_T\n  21:  CALL:  dowhile_body_003_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function dowhile_body_003_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\n  AffectedNodeName: res\n  15:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\nLine 16: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\",\"functionName\":\"dowhile_body_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function dowhile_body_003_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\n  AffectedNodeName: res\n  15:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\nLine 15: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  dowhile_body_004_F(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\n  AffectedNodeName: dowhile_body_004_F\n  21:  CALL:  dowhile_body_004_F(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function dowhile_body_004_F (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\n  AffectedNodeName: res\n  16:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\nLine 15: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\",\"functionName\":\"dowhile_body_004_F\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function dowhile_body_004_F (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\n  AffectedNodeName: res\n  16:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/dowhile_body_004_F\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\nLine 17: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  for_001_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\n  AffectedNodeName: for_001_T\n  22:  CALL:  for_001_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function for_001_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\n  AffectedNodeName: res\n  16:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\nLine 17: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\",\"functionName\":\"for_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function for_001_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\n  AffectedNodeName: res\n  16:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_001_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\nLine 16: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  for_002_F(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\n  AffectedNodeName: for_002_F\n  22:  CALL:  for_002_F(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function for_002_F (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\n  AffectedNodeName: res\n  17:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\nLine 16: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\",\"functionName\":\"for_002_F\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function for_002_F (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\n  AffectedNodeName: res\n  17:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_002_F\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\nLine 16: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  for_003_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\n  AffectedNodeName: for_003_T\n  21:  CALL:  for_003_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function for_003_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\n  AffectedNodeName: res\n  15:  Var Pass:   for (res = __taint_src; i < 1; i++) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\nLine 16: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\",\"functionName\":\"for_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function for_003_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\n  AffectedNodeName: res\n  15:  Var Pass:   for (res = __taint_src; i < 1; i++) {\n /jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/loop_stmt/for_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  assign_expression_001_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\n  AffectedNodeName: assign_expression_001_T\n  20:  CALL:  assign_expression_001_T(__taint_src)\n /jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function assign_expression_001_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\",\"functionName\":\"assign_expression_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function assign_expression_001_T (__taint_src) {\n /jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src\n /jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/flow_sensitive/normal_stmt/assign_expression_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\nLine 21: __taint_sink(obj)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  constructor_obj_001_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: constructor_obj_001_T\n  26:  CALL:  constructor_obj_001_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function constructor_obj_001_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: constructor\n  19:  CALL:    let obj = new A(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: data\n  14:  ARG PASS:      constructor (data) {\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = data\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: obj\n  19:  Var Pass:    let obj = new A(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(obj)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\nLine 21: __taint_sink(obj)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\",\"functionName\":\"constructor_obj_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function constructor_obj_001_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: constructor\n  19:  CALL:    let obj = new A(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: data\n  14:  ARG PASS:      constructor (data) {\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = data\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: obj\n  19:  Var Pass:    let obj = new A(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(obj)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/object_sensitive/interface_class/constructor_obj_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\nLine 17: __taint_sink(map)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  map_object_sensitive_001_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\n  AffectedNodeName: map_object_sensitive_001_T\n  21:  CALL:  map_object_sensitive_001_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function map_object_sensitive_001_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\n  AffectedNodeName: set\n  14:  CALL:    map.set('key1', __taint_src)\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(map)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\nLine 17: __taint_sink(map)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\",\"functionName\":\"map_object_sensitive_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function map_object_sensitive_001_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\n  AffectedNodeName: set\n  14:  CALL:    map.set('key1', __taint_src)\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_001_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(map)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\nLine 17: __taint_sink(map)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  map_object_sensitive_003_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\n  AffectedNodeName: map_object_sensitive_003_T\n  21:  CALL:  map_object_sensitive_003_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function map_object_sensitive_003_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\n  AffectedNodeName: set\n  14:  CALL:    map.set(__taint_src, 'value')\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(map)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\nLine 17: __taint_sink(map)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\",\"functionName\":\"map_object_sensitive_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function map_object_sensitive_003_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\n  AffectedNodeName: set\n  14:  CALL:    map.set(__taint_src, 'value')\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_003_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(map)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\nLine 17: __taint_sink(map)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  map_object_sensitive_005_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\n  AffectedNodeName: map_object_sensitive_005_T\n  21:  CALL:  map_object_sensitive_005_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function map_object_sensitive_005_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(map)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\nLine 17: __taint_sink(map)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\",\"functionName\":\"map_object_sensitive_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function map_object_sensitive_005_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_005_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(map)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/object_sensitive/map/map_object_sensitive_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/array_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\nLine 15: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  array_001_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\n  AffectedNodeName: array_001_T\n  20:  CALL:  array_001_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function array_001_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [__taint_src, 'b', 'c']\n /jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\nLine 15: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\",\"functionName\":\"array_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function array_001_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [__taint_src, 'b', 'c']\n /jsbenchmark/accuracy/object_sensitive/set_array/array_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/array_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/array_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\nLine 15: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  array_003_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\n  AffectedNodeName: array_003_T\n  20:  CALL:  array_003_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function array_003_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [[__taint_src], ['b'], 'c']\n /jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\nLine 15: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\",\"functionName\":\"array_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function array_003_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [[__taint_src], ['b'], 'c']\n /jsbenchmark/accuracy/object_sensitive/set_array/array_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/array_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/array_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\nLine 17: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  array_005_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\n  AffectedNodeName: array_005_T\n  22:  CALL:  array_005_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function array_005_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\n  AffectedNodeName: push\n  14:  CALL:    s.push(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\nLine 17: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\",\"functionName\":\"array_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function array_005_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\n  AffectedNodeName: push\n  14:  CALL:    s.push(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/array_005_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/array_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\nLine 15: __taint_sink(set)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  set_object_sensitive_001_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\n  AffectedNodeName: set_object_sensitive_001_T\n  19:  CALL:  set_object_sensitive_001_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function set_object_sensitive_001_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\n  AffectedNodeName: set\n  13:  Var Pass:    let set = new Set(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(set)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\nLine 15: __taint_sink(set)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\",\"functionName\":\"set_object_sensitive_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function set_object_sensitive_001_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\n  AffectedNodeName: set\n  13:  Var Pass:    let set = new Set(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(set)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\nLine 16: __taint_sink(set)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  set_object_sensitive_003_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\n  AffectedNodeName: set_object_sensitive_003_T\n  20:  CALL:  set_object_sensitive_003_T(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function set_object_sensitive_003_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\n  AffectedNodeName: add\n  14:  CALL:    set.add(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(set)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\nLine 16: __taint_sink(set)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\",\"functionName\":\"set_object_sensitive_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function set_object_sensitive_003_T (__taint_src) {\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\n  AffectedNodeName: add\n  14:  CALL:    set.add(__taint_src)\n /jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(set)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/object_sensitive/set_array/set_object_sensitive_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_007_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_008_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  conditional_if_009_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\n  AffectedNodeName: conditional_if_009_T\n  23:  CALL:  conditional_if_009_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_if_009_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\n  AffectedNodeName: res\n  17:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\",\"functionName\":\"conditional_if_009_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_if_009_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\n  AffectedNodeName: res\n  17:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_009_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  conditional_if_010_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\n  AffectedNodeName: conditional_if_010_F\n  23:  CALL:  conditional_if_010_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_if_010_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\n  AffectedNodeName: res\n  17:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\",\"functionName\":\"conditional_if_010_F\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_if_010_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\n  AffectedNodeName: res\n  17:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_010_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  conditional_if_011_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\n  AffectedNodeName: conditional_if_011_T\n  23:  CALL:  conditional_if_011_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_if_011_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\n  AffectedNodeName: res\n  15:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\",\"functionName\":\"conditional_if_011_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_if_011_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\n  AffectedNodeName: res\n  15:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_011_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  conditional_if_012_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\n  AffectedNodeName: conditional_if_012_F\n  23:  CALL:  conditional_if_012_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_if_012_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\n  AffectedNodeName: res\n  15:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\",\"functionName\":\"conditional_if_012_F\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_if_012_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\n  AffectedNodeName: res\n  15:  Var Pass:     res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_if_012_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_005_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\nLine 19: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  conditional_switch_006_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\n  AffectedNodeName: conditional_switch_006_T\n  23:  CALL:  conditional_switch_006_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_switch_006_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\n  AffectedNodeName: data\n  16:  Var Pass:       data = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\nLine 19: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\",\"functionName\":\"conditional_switch_006_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_switch_006_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\n  AffectedNodeName: data\n  16:  Var Pass:       data = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_006_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\nLine 19: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  conditional_switch_007_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\n  AffectedNodeName: conditional_switch_007_F\n  23:  CALL:  conditional_switch_007_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_switch_007_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\n  AffectedNodeName: data\n  16:  Var Pass:       data = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\nLine 19: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\",\"functionName\":\"conditional_switch_007_F\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_switch_007_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\n  AffectedNodeName: data\n  16:  Var Pass:       data = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_007_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\nLine 19: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  conditional_switch_008_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\n  AffectedNodeName: conditional_switch_008_T\n  23:  CALL:  conditional_switch_008_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_switch_008_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\n  AffectedNodeName: data\n  16:  Var Pass:       data = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\nLine 19: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\",\"functionName\":\"conditional_switch_008_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_switch_008_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\n  AffectedNodeName: data\n  16:  Var Pass:       data = __taint_src\n /jsbenchmark/accuracy/path_sensitive/conditional_stmt/conditional_switch_008_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\nLine 14: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  exception_throw_001_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\n  AffectedNodeName: exception_throw_001_T\n  21:  CALL:  exception_throw_001_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function exception_throw_001_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\nLine 14: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\",\"functionName\":\"exception_throw_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function exception_throw_001_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  exception_throw_002_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\n  AffectedNodeName: exception_throw_002_F\n  22:  CALL:  exception_throw_002_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function exception_throw_002_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\",\"functionName\":\"exception_throw_002_F\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function exception_throw_002_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_002_F\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\nLine 16: __taint_sink(e)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  exception_throw_003_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: exception_throw_003_T\n  21:  CALL:  exception_throw_003_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function exception_throw_003_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: __taint_src\n  14:  Throw Pass:      throw __taint_src\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: e\n  15:  Var Pass:    } catch (e) {\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(e)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\nLine 16: __taint_sink(e)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\",\"functionName\":\"exception_throw_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function exception_throw_003_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: __taint_src\n  14:  Throw Pass:      throw __taint_src\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: e\n  15:  Var Pass:    } catch (e) {\n /jsbenchmark/accuracy/path_sensitive/exception_throw/exception_throw_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(e)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  break_001_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\n  AffectedNodeName: break_001_F\n  26:  CALL:  break_001_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function break_001_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\n  AffectedNodeName: res\n  16:  Var Pass:       res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\",\"functionName\":\"break_001_F\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function break_001_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\n  AffectedNodeName: res\n  16:  Var Pass:       res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_001_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\nLine 18: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\n  AffectedNodeName: __taint_src\n  25:  SOURCE:  break_002_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\n  AffectedNodeName: break_002_T\n  25:  CALL:  break_002_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function break_002_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\n  AffectedNodeName: res\n  16:  Var Pass:       res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\nLine 18: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\",\"functionName\":\"break_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function break_002_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\n  AffectedNodeName: res\n  16:  Var Pass:       res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_002_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_label_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/break_label_002_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\n  AffectedNodeName: __taint_src\n  24:  SOURCE:  continue_001_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\n  AffectedNodeName: continue_001_T\n  24:  CALL:  continue_001_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function continue_001_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\n  AffectedNodeName: res\n  16:  Var Pass:       res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\",\"functionName\":\"continue_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function continue_001_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\n  AffectedNodeName: res\n  16:  Var Pass:       res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\nLine 18: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\n  AffectedNodeName: __taint_src\n  25:  SOURCE:  continue_002_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\n  AffectedNodeName: continue_002_F\n  25:  CALL:  continue_002_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function continue_002_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\n  AffectedNodeName: res\n  16:  Var Pass:       res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\n  AffectedNodeName: __taint_sink\n  18:  SINK:        __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\nLine 18: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\",\"functionName\":\"continue_002_F\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function continue_002_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\n  AffectedNodeName: res\n  16:  Var Pass:       res = __taint_src\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/continue_002_F\n  AffectedNodeName: __taint_sink\n  18:  SINK:        __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\nLine 17: __taint_sink(arg1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  return_001_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: return_001_T\n  26:  CALL:  return_001_T(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function return_001_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: process\n  13:  CALL:    process(__taint_src, 'some_condition')\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: arg1\n  15:  ARG PASS:    function process (arg1, arg2) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:        __taint_sink(arg1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\nLine 17: __taint_sink(arg1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\",\"functionName\":\"return_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function return_001_T (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: process\n  13:  CALL:    process(__taint_src, 'some_condition')\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: arg1\n  15:  ARG PASS:    function process (arg1, arg2) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_001_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:        __taint_sink(arg1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\nLine 19: __taint_sink(arg1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: __taint_src\n  25:  SOURCE:  return_002_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: return_002_F\n  25:  CALL:  return_002_F(__taint_src)\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function return_002_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: process\n  13:  CALL:    process(__taint_src, 'some_condition')\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: arg1\n  15:  ARG PASS:    function process (arg1, arg2) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:      __taint_sink(arg1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\nLine 19: __taint_sink(arg1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\",\"functionName\":\"return_002_F\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function return_002_F (__taint_src) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: process\n  13:  CALL:    process(__taint_src, 'some_condition')\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: arg1\n  15:  ARG PASS:    function process (arg1, arg2) {\n /jsbenchmark/accuracy/path_sensitive/explicit_jump_control/explicit_jump_control/return_002_F\n  AffectedNodeName: __taint_sink\n  19:  SINK:      __taint_sink(arg1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/accuracy/path_sensitive/loop_stmt/for_body_004_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/loop_stmt/for_body_005_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/loop_stmt/while_body_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/accuracy/path_sensitive/loop_stmt/while_body_004_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\nLine 14: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\n  AffectedNodeName: __taint_src\n  27:  SOURCE:  asynchronous_await_001_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\n  AffectedNodeName: asynchronous_await_001_T\n  27:  CALL:  asynchronous_await_001_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  async function asynchronous_await_001_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\n  AffectedNodeName: resolve\n  19:  CALL:          resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\nLine 14: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\",\"functionName\":\"asynchronous_await_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  async function asynchronous_await_001_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\n  AffectedNodeName: resolve\n  19:  CALL:          resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_await_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\nLine 19: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: __taint_src\n  28:  SOURCE:  asynchronous_promise_001_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: asynchronous_promise_001_T\n  28:  CALL:  asynchronous_promise_001_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function asynchronous_promise_001_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: resolve\n  14:  CALL:      resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => {\n  19:  CALL:        __taint_sink(result)\n  20:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: result\n  18:  ARG PASS:      .then((result) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:        __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\nLine 19: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\",\"functionName\":\"asynchronous_promise_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function asynchronous_promise_001_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: resolve\n  14:  CALL:      resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => {\n  19:  CALL:        __taint_sink(result)\n  20:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: result\n  18:  ARG PASS:      .then((result) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:        __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\nLine 19: __taint_sink(value)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: __taint_src\n  24:  SOURCE:  asynchronous_promise_003_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: asynchronous_promise_003_T\n  24:  CALL:  asynchronous_promise_003_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function asynchronous_promise_003_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: asyncFunc\n  19:  CALL:    asyncFunc(__taint_src).then((value) => __taint_sink(value))\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: value\n  13:  ARG PASS:    function asyncFunc (value) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: resolve\n  15:  CALL:        setTimeout(() => resolve(value), 10)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: <anonymous_19_31>\n  19:  CALL:    asyncFunc(__taint_src).then((value) => __taint_sink(value))\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: value\n  19:  ARG PASS:    asyncFunc(__taint_src).then((value) => __taint_sink(value))\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    asyncFunc(__taint_src).then((value) => __taint_sink(value))\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\nLine 19: __taint_sink(value)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\",\"functionName\":\"asynchronous_promise_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function asynchronous_promise_003_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: asyncFunc\n  19:  CALL:    asyncFunc(__taint_src).then((value) => __taint_sink(value))\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: value\n  13:  ARG PASS:    function asyncFunc (value) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: resolve\n  15:  CALL:        setTimeout(() => resolve(value), 10)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: <anonymous_19_31>\n  19:  CALL:    asyncFunc(__taint_src).then((value) => __taint_sink(value))\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: value\n  19:  ARG PASS:    asyncFunc(__taint_src).then((value) => __taint_sink(value))\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_003_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    asyncFunc(__taint_src).then((value) => __taint_sink(value))\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\nLine 19: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: __taint_src\n  28:  SOURCE:  asynchronous_promise_005_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: asynchronous_promise_005_T\n  28:  CALL:  asynchronous_promise_005_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function asynchronous_promise_005_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: resolve\n  14:  CALL:      resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => {\n  19:  CALL:        __taint_sink(result)\n  20:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: result\n  18:  ARG PASS:      .then((result) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:        __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\nLine 19: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\",\"functionName\":\"asynchronous_promise_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function asynchronous_promise_005_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: resolve\n  14:  CALL:      resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => {\n  19:  CALL:        __taint_sink(result)\n  20:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: result\n  18:  ARG PASS:      .then((result) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_005_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:        __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\nLine 25: __taint_sink(final)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: __taint_src\n  31:  SOURCE:  asynchronous_promise_007_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: asynchronous_promise_007_T\n  31:  CALL:  asynchronous_promise_007_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function asynchronous_promise_007_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: resolve\n  14:  CALL:      resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => {\n  19:  CALL:        final = result\n  20:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: result\n  18:  ARG PASS:      .then((result) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: final\n  19:  Var Pass:       final = result\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: __taint_sink\n  25:  SINK:        __taint_sink(final)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\nLine 25: __taint_sink(final)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\",\"functionName\":\"asynchronous_promise_007_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function asynchronous_promise_007_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: resolve\n  14:  CALL:      resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => {\n  19:  CALL:        final = result\n  20:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: result\n  18:  ARG PASS:      .then((result) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: final\n  19:  Var Pass:       final = result\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_007_T\n  AffectedNodeName: __taint_sink\n  25:  SINK:        __taint_sink(final)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_008_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\nLine 21: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: __taint_src\n  27:  SOURCE:  asynchronous_promise_009_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: asynchronous_promise_009_T\n  27:  CALL:  asynchronous_promise_009_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function asynchronous_promise_009_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: resolve\n  14:  CALL:      resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => result + '_1')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: result\n  18:  ARG PASS:      .then((result) => result + '_1')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: [return value]\n  18:  Return Value:      .then((result) => result + '_1')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL RETURN:   promise\n  18:  CALL RETURN:     .then((result) => result + '_1')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_19_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => result + '_1')\n  19:  CALL:      .then((result) => result + '_2')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: result\n  19:  ARG PASS:      .then((result) => result + '_2')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: [return value]\n  19:  Return Value:      .then((result) => result + '_2')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_19_11>\n  17:  CALL RETURN:   promise\n  18:  CALL RETURN:     .then((result) => result + '_1')\n  19:  CALL RETURN:     .then((result) => result + '_2')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_20_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => result + '_1')\n  19:  CALL:      .then((result) => result + '_2')\n  20:  CALL:      .then((result) => {\n  21:  CALL:        __taint_sink(result)\n  22:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: result\n  20:  ARG PASS:      .then((result) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:        __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\nLine 21: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\",\"functionName\":\"asynchronous_promise_009_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function asynchronous_promise_009_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: resolve\n  14:  CALL:      resolve(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => result + '_1')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: result\n  18:  ARG PASS:      .then((result) => result + '_1')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: [return value]\n  18:  Return Value:      .then((result) => result + '_1')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_18_11>\n  17:  CALL RETURN:   promise\n  18:  CALL RETURN:     .then((result) => result + '_1')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_19_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => result + '_1')\n  19:  CALL:      .then((result) => result + '_2')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: result\n  19:  ARG PASS:      .then((result) => result + '_2')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: [return value]\n  19:  Return Value:      .then((result) => result + '_2')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_19_11>\n  17:  CALL RETURN:   promise\n  18:  CALL RETURN:     .then((result) => result + '_1')\n  19:  CALL RETURN:     .then((result) => result + '_2')\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: <anonymous_20_11>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => result + '_1')\n  19:  CALL:      .then((result) => result + '_2')\n  20:  CALL:      .then((result) => {\n  21:  CALL:        __taint_sink(result)\n  22:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: result\n  20:  ARG PASS:      .then((result) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_009_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:        __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_010_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\nLine 20: __taint_sink(error)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  asynchronous_promise_011_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: asynchronous_promise_011_T\n  26:  CALL:  asynchronous_promise_011_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function asynchronous_promise_011_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: reject\n  14:  CALL:      reject(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: <anonymous_19_12>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => {})\n  19:  CALL:      .catch((error) => {\n  20:  CALL:        __taint_sink(error)\n  21:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: error\n  19:  ARG PASS:      .catch((error) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: __taint_sink\n  20:  SINK:        __taint_sink(error)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\nLine 20: __taint_sink(error)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\",\"functionName\":\"asynchronous_promise_011_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function asynchronous_promise_011_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: reject\n  14:  CALL:      reject(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: <anonymous_19_12>\n  17:  CALL:    promise\n  18:  CALL:      .then((result) => {})\n  19:  CALL:      .catch((error) => {\n  20:  CALL:        __taint_sink(error)\n  21:  CALL:      })\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: error\n  19:  ARG PASS:      .catch((error) => {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_011_T\n  AffectedNodeName: __taint_sink\n  20:  SINK:        __taint_sink(error)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promise_012_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\nLine 28: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\n  AffectedNodeName: __taint_src\n  35:  SOURCE:  promisify_001_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\n  AffectedNodeName: promisify_001_T\n  35:  CALL:  promisify_001_T(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\n  AffectedNodeName: __taint_src\n  24:  ARG PASS:  async function promisify_001_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\n  AffectedNodeName: data\n  27:  Var Pass:      let data = await readFileAsync(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:      __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\nLine 28: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\",\"functionName\":\"promisify_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\n  AffectedNodeName: __taint_src\n  24:  SOURCE:  async function promisify_001_T (__taint_src) {\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\n  AffectedNodeName: data\n  27:  Var Pass:      let data = await readFileAsync(__taint_src)\n /jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_001_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:      __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/asynchronous_tracing/promise_callback_await/asynchronous_promisify_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\nLine 14: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  conditional_if_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\n  AffectedNodeName: conditional_if_001_T\n  20:  CALL:  conditional_if_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_if_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\nLine 14: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\",\"functionName\":\"conditional_if_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_if_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  conditional_if_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\n  AffectedNodeName: conditional_if_003_T\n  20:  CALL:  conditional_if_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_if_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\",\"functionName\":\"conditional_if_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_if_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  conditional_if_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\n  AffectedNodeName: conditional_if_005_T\n  22:  CALL:  conditional_if_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_if_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\",\"functionName\":\"conditional_if_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_if_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_005_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_if_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  conditional_switch_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\n  AffectedNodeName: conditional_switch_001_T\n  20:  CALL:  conditional_switch_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_switch_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:        __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\",\"functionName\":\"conditional_switch_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_switch_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:        __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/conditional_stmt/conditional_switch_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\nLine 16: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  dowhile_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\n  AffectedNodeName: dowhile_body_001_T\n  21:  CALL:  dowhile_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function dowhile_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\n  AffectedNodeName: res\n  15:  Var Pass:     res = res + __taint_src\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    } while (__taint_sink(res))\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\nLine 16: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\",\"functionName\":\"dowhile_body_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function dowhile_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\n  AffectedNodeName: res\n  15:  Var Pass:     res = res + __taint_src\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    } while (__taint_sink(res))\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/dowhile_body_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\nLine 15: __taint_sink(item)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  every_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: every_001_T\n  20:  CALL:  every_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function every_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: <anonymous_14_13>\n  14:  CALL:    arr.every(function (item) {\n  15:  CALL:      __taint_sink(item)\n  16:  CALL:    })\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: item\n  14:  ARG PASS:    arr.every(function (item) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(item)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\nLine 15: __taint_sink(item)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\",\"functionName\":\"every_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function every_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: <anonymous_14_13>\n  14:  CALL:    arr.every(function (item) {\n  15:  CALL:      __taint_sink(item)\n  16:  CALL:    })\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: item\n  14:  ARG PASS:    arr.every(function (item) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(item)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/every_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\nLine 18: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  for_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\n  AffectedNodeName: for_body_001_T\n  23:  CALL:  for_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function for_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\n  AffectedNodeName: res\n  16:  Var Pass:     res = __taint_src\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\nLine 18: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\",\"functionName\":\"for_body_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function for_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\n  AffectedNodeName: res\n  16:  Var Pass:     res = __taint_src\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_body_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  for_init_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: for_init_001_T\n  23:  CALL:  for_init_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function for_init_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: ini\n  16:  Var Pass:   for (ini = __taint_src; j < 10; j++) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: res\n  17:  Var Pass:     res = res + ini\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\",\"functionName\":\"for_init_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function for_init_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: ini\n  16:  Var Pass:   for (ini = __taint_src; j < 10; j++) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: res\n  17:  Var Pass:     res = res + ini\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_init_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\nLine 20: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: __taint_src\n  24:  SOURCE:  for_update_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: for_update_001_T\n  24:  CALL:  for_update_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function for_update_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: j\n  16:  Var Pass:   for (; ini < 2; j = __taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: res\n  17:  Var Pass:     res = j\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: __taint_sink\n  20:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\nLine 20: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\",\"functionName\":\"for_update_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function for_update_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: j\n  16:  Var Pass:   for (; ini < 2; j = __taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: res\n  17:  Var Pass:     res = j\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_001_T\n  AffectedNodeName: __taint_sink\n  20:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/for_update_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\nLine 16: __taint_sink(item)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  foreach_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: foreach_001_T\n  21:  CALL:  foreach_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function foreach_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: <anonymous_15_15>\n  15:  CALL:    arr.forEach(function (item) {\n  16:  CALL:      __taint_sink(item)\n  17:  CALL:    })\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: item\n  15:  ARG PASS:    arr.forEach(function (item) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(item)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\nLine 16: __taint_sink(item)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\",\"functionName\":\"foreach_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function foreach_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: <anonymous_15_15>\n  15:  CALL:    arr.forEach(function (item) {\n  16:  CALL:      __taint_sink(item)\n  17:  CALL:    })\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: item\n  15:  ARG PASS:    arr.forEach(function (item) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(item)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/foreach_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\nLine 20: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\n  AffectedNodeName: __taint_src\n  25:  SOURCE:  forin_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\n  AffectedNodeName: forin_body_001_T\n  25:  CALL:  forin_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function forin_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = { key1: 'value1', key2: __taint_src }\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\n  AffectedNodeName: __taint_sink\n  20:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\nLine 20: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\",\"functionName\":\"forin_body_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function forin_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = { key1: 'value1', key2: __taint_src }\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_001_T\n  AffectedNodeName: __taint_sink\n  20:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forin_body_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\nLine 18: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  forof_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: forof_body_001_T\n  22:  CALL:  forof_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function forof_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: value\n  15:  Var Pass:    for (let value of arr) {\n  16:  Var Pass:      res = value\n  17:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: res\n  16:  Var Pass:     res = value\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\nLine 18: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\",\"functionName\":\"forof_body_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function forof_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: value\n  15:  Var Pass:    for (let value of arr) {\n  16:  Var Pass:      res = value\n  17:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: res\n  16:  Var Pass:     res = value\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/forof_body_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\nLine 15: __taint_sink(item)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  some_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: some_001_T\n  20:  CALL:  some_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function some_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: <anonymous_14_12>\n  14:  CALL:    arr.some(function (item) {\n  15:  CALL:      __taint_sink(item)\n  16:  CALL:    })\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: item\n  14:  ARG PASS:    arr.some(function (item) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(item)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\nLine 15: __taint_sink(item)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\",\"functionName\":\"some_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function some_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: <anonymous_14_12>\n  14:  CALL:    arr.some(function (item) {\n  15:  CALL:      __taint_sink(item)\n  16:  CALL:    })\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: item\n  14:  ARG PASS:    arr.some(function (item) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(item)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/some_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  while_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\n  AffectedNodeName: while_body_001_T\n  23:  CALL:  while_body_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function while_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\n  AffectedNodeName: res\n  16:  Var Pass:     res = res + __taint_src\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\",\"functionName\":\"while_body_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function while_body_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\n  AffectedNodeName: res\n  16:  Var Pass:     res = res + __taint_src\n /jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/control_flow/loop_stmt/while_body_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\nLine 16: __taint_sink(e)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  exception_catch_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: exception_catch_001_T\n  21:  CALL:  exception_catch_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function exception_catch_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: __taint_src\n  14:  Throw Pass:      throw __taint_src\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: e\n  15:  Var Pass:    } catch (e) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(e)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\nLine 16: __taint_sink(e)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\",\"functionName\":\"exception_catch_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function exception_catch_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: __taint_src\n  14:  Throw Pass:      throw __taint_src\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: e\n  15:  Var Pass:    } catch (e) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(e)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\nLine 16: __taint_sink(e.message)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  exception_catch_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  AffectedNodeName: exception_catch_003_T\n  21:  CALL:  exception_catch_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function exception_catch_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  14:  Throw Pass:      throw { message: __taint_src, code: 123 }\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  AffectedNodeName: e\n  15:  Var Pass:    } catch (e) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(e.message)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\nLine 16: __taint_sink(e.message)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\",\"functionName\":\"exception_catch_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function exception_catch_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  14:  Throw Pass:      throw { message: __taint_src, code: 123 }\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  AffectedNodeName: e\n  15:  Var Pass:    } catch (e) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:      __taint_sink(e.message)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_catch_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: __taint_src\n  24:  SOURCE:  exception_finally_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: exception_finally_001_T\n  24:  CALL:  exception_finally_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function exception_finally_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: __taint_src\n  15:  Throw Pass:      throw __taint_src\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: e\n  16:  Var Pass:    } catch (e) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: res\n  17:  Var Pass:     res = e\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\nLine 19: __taint_sink(res)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\",\"functionName\":\"exception_finally_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function exception_finally_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: __taint_src\n  15:  Throw Pass:      throw __taint_src\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: e\n  16:  Var Pass:    } catch (e) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: res\n  17:  Var Pass:     res = e\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:      __taint_sink(res)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_finally_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\nLine 14: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  exception_try_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\n  AffectedNodeName: exception_try_001_T\n  21:  CALL:  exception_try_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function exception_try_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\nLine 14: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\",\"functionName\":\"exception_try_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function exception_try_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/exception_error/exception_throw/exception_try_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  assign_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\n  AffectedNodeName: assign_expression_001_T\n  20:  CALL:  assign_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function assign_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\n  AffectedNodeName: result\n  14:  Var Pass:   result = __taint_src\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\",\"functionName\":\"assign_expression_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function assign_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\n  AffectedNodeName: result\n  14:  Var Pass:   result = __taint_src\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/assign_expression_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  binary_expression_add_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\n  AffectedNodeName: binary_expression_add_001_T\n  19:  CALL:  binary_expression_add_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function binary_expression_add_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src + '_'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\",\"functionName\":\"binary_expression_add_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function binary_expression_add_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src + '_'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  binary_expression_add_assignment_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\n  AffectedNodeName: binary_expression_add_assignment_001_T\n  20:  CALL:  binary_expression_add_assignment_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function binary_expression_add_assignment_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\",\"functionName\":\"binary_expression_add_assignment_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function binary_expression_add_assignment_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/binary_expression_add_assignment_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  bitwise_expression_and_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\n  AffectedNodeName: bitwise_expression_and_001_T\n  19:  CALL:  bitwise_expression_and_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function bitwise_expression_and_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src & 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\",\"functionName\":\"bitwise_expression_and_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function bitwise_expression_and_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src & 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_and_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  bitwise_expression_lsh_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\n  AffectedNodeName: bitwise_expression_lsh_001_T\n  19:  CALL:  bitwise_expression_lsh_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function bitwise_expression_lsh_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src << 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\",\"functionName\":\"bitwise_expression_lsh_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function bitwise_expression_lsh_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src << 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_lsh_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  bitwise_expression_not_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\n  AffectedNodeName: bitwise_expression_not_001_T\n  19:  CALL:  bitwise_expression_not_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function bitwise_expression_not_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\",\"functionName\":\"bitwise_expression_not_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function bitwise_expression_not_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_not_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  bitwise_expression_or_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\n  AffectedNodeName: bitwise_expression_or_001_T\n  19:  CALL:  bitwise_expression_or_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function bitwise_expression_or_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src | 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\",\"functionName\":\"bitwise_expression_or_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function bitwise_expression_or_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src | 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_or_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  bitwise_expression_rsh_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\n  AffectedNodeName: bitwise_expression_rsh_001_T\n  19:  CALL:  bitwise_expression_rsh_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function bitwise_expression_rsh_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src >> 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\",\"functionName\":\"bitwise_expression_rsh_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function bitwise_expression_rsh_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src >> 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_rsh_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  bitwise_expression_xor_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\n  AffectedNodeName: bitwise_expression_xor_001_T\n  19:  CALL:  bitwise_expression_xor_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function bitwise_expression_xor_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src ^ 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\",\"functionName\":\"bitwise_expression_xor_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function bitwise_expression_xor_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src ^ 1\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/bitwise_expression_xor_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  logical_expression_and_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\n  AffectedNodeName: logical_expression_and_002_T\n  19:  CALL:  logical_expression_and_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function logical_expression_and_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = '_' && __taint_src\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\",\"functionName\":\"logical_expression_and_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function logical_expression_and_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = '_' && __taint_src\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_and_002_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  logical_expression_or_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\n  AffectedNodeName: logical_expression_or_001_T\n  19:  CALL:  logical_expression_or_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function logical_expression_or_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src || '_'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\",\"functionName\":\"logical_expression_or_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function logical_expression_or_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src || '_'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/logic_expression_or_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  prefix_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\n  AffectedNodeName: prefix_expression_001_T\n  19:  CALL:  prefix_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function prefix_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\",\"functionName\":\"prefix_expression_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function prefix_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/prefix_expression_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  relation_expression_equal_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\n  AffectedNodeName: relation_expression_equal_001_T\n  19:  CALL:  relation_expression_equal_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function relation_expression_equal_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src === '__taint_src'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\",\"functionName\":\"relation_expression_equal_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function relation_expression_equal_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src === '__taint_src'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_equal_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  relation_expression_greater_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\n  AffectedNodeName: relation_expression_greater_001_T\n  19:  CALL:  relation_expression_greater_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function relation_expression_greater_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src > '__taint_src'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\",\"functionName\":\"relation_expression_greater_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function relation_expression_greater_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src > '__taint_src'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_greater_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  relation_expression_less_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\n  AffectedNodeName: relation_expression_less_001_T\n  19:  CALL:  relation_expression_less_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function relation_expression_less_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src < '__taint_src'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\",\"functionName\":\"relation_expression_less_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function relation_expression_less_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src < '__taint_src'\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/relation_expression_less_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  suffix_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\n  AffectedNodeName: suffix_expression_001_T\n  19:  CALL:  suffix_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function suffix_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\",\"functionName\":\"suffix_expression_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function suffix_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/basic_expression_operation/suffix_expression_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  conditional_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\n  AffectedNodeName: conditional_expression_001_T\n  20:  CALL:  conditional_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function conditional_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\n  AffectedNodeName: result\n  14:  Var Pass:   result = true ? __taint_src : 'aa'\n /jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\",\"functionName\":\"conditional_expression_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function conditional_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\n  AffectedNodeName: result\n  14:  Var Pass:   result = true ? __taint_src : 'aa'\n /jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/conditional_expression/conditional_expression_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\nLine 16: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  lambda_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: lambda_expression_001_T\n  21:  CALL:  lambda_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function lambda_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: <anonymous_14_18>\n  15:  CALL:    result = lambda(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: a\n  14:  ARG PASS:    const lambda = (a) => a\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: [return value]\n  14:  Return Value:    const lambda = (a) => a\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: <anonymous_14_18>\n  15:  CALL RETURN:   result = lambda(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: result\n  15:  Var Pass:   result = lambda(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\nLine 16: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\",\"functionName\":\"lambda_expression_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function lambda_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: <anonymous_14_18>\n  15:  CALL:    result = lambda(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: a\n  14:  ARG PASS:    const lambda = (a) => a\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: [return value]\n  14:  Return Value:    const lambda = (a) => a\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: <anonymous_14_18>\n  15:  CALL RETURN:   result = lambda(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: result\n  15:  Var Pass:   result = lambda(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_001_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/lambda_expression/lambda_expression_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\nLine 18: __taint_sink(Employee.lastname)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  delete_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\n  AffectedNodeName: delete_expression_001_T\n  23:  CALL:  delete_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function delete_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\n  AffectedNodeName: Employee\n  12:  Var Pass:    const Employee = {\n  13:  Var Pass:      firstname: 'Bob',\n  14:  Var Pass:      lastname: __taint_src,\n  15:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(Employee.lastname)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\nLine 18: __taint_sink(Employee.lastname)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\",\"functionName\":\"delete_expression_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function delete_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\n  AffectedNodeName: Employee\n  12:  Var Pass:    const Employee = {\n  13:  Var Pass:      firstname: 'Bob',\n  14:  Var Pass:      lastname: __taint_src,\n  15:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(Employee.lastname)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\nLine 14: __taint_sink(array)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\n  AffectedNodeName: __taint_src\n  18:  SOURCE:  delete_expression_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\n  AffectedNodeName: delete_expression_003_T\n  18:  CALL:  delete_expression_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function delete_expression_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\n  AffectedNodeName: array\n  12:  Var Pass:    const array = [__taint_src, 'b', 'c', 'd']\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(array)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\nLine 14: __taint_sink(array)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\",\"functionName\":\"delete_expression_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function delete_expression_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\n  AffectedNodeName: array\n  12:  Var Pass:    const array = [__taint_src, 'b', 'c', 'd']\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_003_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(array)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/delete_expression_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  destructuring_assignment_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: destructuring_assignment_001_T\n  20:  CALL:  destructuring_assignment_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function destructuring_assignment_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['_', '_', __taint_src]\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: result\n  14:  Var Pass:    let [a, b, result] = arr\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\",\"functionName\":\"destructuring_assignment_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function destructuring_assignment_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['_', '_', __taint_src]\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: result\n  14:  Var Pass:    let [a, b, result] = arr\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\nLine 15: __taint_sink(c)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  destructuring_assignment_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: destructuring_assignment_003_T\n  20:  CALL:  destructuring_assignment_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function destructuring_assignment_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = { a: '_', b: '_', c: __taint_src }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: c\n  14:  Var Pass:    let { a, b, c } = arr\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(c)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\nLine 15: __taint_sink(c)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\",\"functionName\":\"destructuring_assignment_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function destructuring_assignment_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = { a: '_', b: '_', c: __taint_src }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: c\n  14:  Var Pass:    let { a, b, c } = arr\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(c)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\nLine 15: __taint_sink(c)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  destructuring_assignment_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: destructuring_assignment_005_T\n  20:  CALL:  destructuring_assignment_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function destructuring_assignment_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['_', '_', [__taint_src, '_']]\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: c\n  14:  Var Pass:    let [a, b, [c, d]] = arr\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(c)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\nLine 15: __taint_sink(c)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\",\"functionName\":\"destructuring_assignment_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function destructuring_assignment_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = ['_', '_', [__taint_src, '_']]\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: c\n  14:  Var Pass:    let [a, b, [c, d]] = arr\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_005_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(c)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\nLine 15: __taint_sink(c)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  destructuring_assignment_007_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: destructuring_assignment_007_T\n  20:  CALL:  destructuring_assignment_007_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function destructuring_assignment_007_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = { a: '_', b: '_', c: { __taint_src, d: 'a' } }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: c\n  14:  Var Pass:    let { a, b, c } = arr\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(c)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\nLine 15: __taint_sink(c)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\",\"functionName\":\"destructuring_assignment_007_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function destructuring_assignment_007_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: arr\n  13:  Var Pass:    let arr = { a: '_', b: '_', c: { __taint_src, d: 'a' } }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: c\n  14:  Var Pass:    let { a, b, c } = arr\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_007_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(c)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/destructuring_assignment_008_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  exponentiation_operator_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\n  AffectedNodeName: exponentiation_operator_001_T\n  19:  CALL:  exponentiation_operator_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function exponentiation_operator_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src ** 2\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\",\"functionName\":\"exponentiation_operator_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function exponentiation_operator_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src ** 2\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/exponentiation_operator_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  nullish_coalescing_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\n  AffectedNodeName: nullish_coalescing_001_T\n  19:  CALL:  nullish_coalescing_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function nullish_coalescing_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = null ?? __taint_src\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\",\"functionName\":\"nullish_coalescing_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function nullish_coalescing_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = null ?? __taint_src\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/nullish_coalescing_operator_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\nLine 18: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  optional_chaining_operator_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: optional_chaining_operator_001_T\n  23:  CALL:  optional_chaining_operator_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function optional_chaining_operator_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = {\n  14:  Var Pass:      taintKey: __taint_src,\n  15:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: result\n  17:  Var Pass:    let result = obj?.taintKey\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\nLine 18: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\",\"functionName\":\"optional_chaining_operator_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function optional_chaining_operator_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = {\n  14:  Var Pass:      taintKey: __taint_src,\n  15:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: result\n  17:  Var Pass:    let result = obj?.taintKey\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/optional_chaining_operator_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\nLine 17: __taint_sink(args)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  rest_parameter_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: rest_parameter_001_T\n  22:  CALL:  rest_parameter_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function rest_parameter_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: collectArgs\n  13:  CALL:    collectArgs('prefix', __taint_src, 'suffix')\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: __tmp0__\n  16:  ARG PASS:  function collectArgs (...args) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: args\n  16:  Var Pass: function collectArgs (...args) {\n  17:  Var Pass:   __taint_sink(args)\n  18:  Var Pass: }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(args)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\nLine 17: __taint_sink(args)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\",\"functionName\":\"rest_parameter_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function rest_parameter_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: collectArgs\n  13:  CALL:    collectArgs('prefix', __taint_src, 'suffix')\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: __tmp0__\n  16:  ARG PASS:  function collectArgs (...args) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: args\n  16:  Var Pass: function collectArgs (...args) {\n  17:  Var Pass:   __taint_sink(args)\n  18:  Var Pass: }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_001_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(args)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\nLine 18: __taint_sink({with(params)})\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  rest_parameter_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\n  AffectedNodeName: rest_parameter_003_T\n  23:  CALL:  rest_parameter_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function rest_parameter_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\n  AffectedNodeName: params\n  13:  Var Pass:    const params = {\n  14:  Var Pass:      name: 'Tony',\n  15:  Var Pass:      age: '12',\n  16:  Var Pass:      id: __taint_src,\n  17:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink({ ...params })\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\nLine 18: __taint_sink({with(params)})\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\",\"functionName\":\"rest_parameter_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function rest_parameter_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\n  AffectedNodeName: params\n  13:  Var Pass:    const params = {\n  14:  Var Pass:      name: 'Tony',\n  15:  Var Pass:      age: '12',\n  16:  Var Pass:      id: __taint_src,\n  17:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_003_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink({ ...params })\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\nLine 17: __taint_sink(args)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  rest_parameter_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: rest_parameter_005_T\n  22:  CALL:  rest_parameter_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function rest_parameter_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: collectArgs\n  13:  CALL:    collectArgs(['prefix', __taint_src, 'suffix'])\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: __tmp0__\n  16:  ARG PASS:  function collectArgs (...args) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: args\n  16:  Var Pass: function collectArgs (...args) {\n  17:  Var Pass:   __taint_sink(args)\n  18:  Var Pass: }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(args)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\nLine 17: __taint_sink(args)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\",\"functionName\":\"rest_parameter_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function rest_parameter_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: collectArgs\n  13:  CALL:    collectArgs(['prefix', __taint_src, 'suffix'])\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: __tmp0__\n  16:  ARG PASS:  function collectArgs (...args) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: args\n  16:  Var Pass: function collectArgs (...args) {\n  17:  Var Pass:   __taint_sink(args)\n  18:  Var Pass: }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_005_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(args)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/rest_parameter_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\nLine 15: __taint_sink(array)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  spread_operator_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: spread_operator_001_T\n  20:  CALL:  spread_operator_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function spread_operator_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: array1\n  13:  Var Pass:    let array1 = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: array\n  14:  Var Pass:    let array = ['c', ...array1]\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(array)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\nLine 15: __taint_sink(array)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\",\"functionName\":\"spread_operator_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function spread_operator_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: array1\n  13:  Var Pass:    let array1 = ['a', 'b', __taint_src]\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: array\n  14:  Var Pass:    let array = ['c', ...array1]\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(array)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\nLine 22: __taint_sink(newParams)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: __taint_src\n  27:  SOURCE:  spread_operator_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: spread_operator_003_T\n  27:  CALL:  spread_operator_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function spread_operator_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: params\n  13:  Var Pass:    const params = {\n  14:  Var Pass:      name: 'Tony',\n  15:  Var Pass:      age: '12',\n  16:  Var Pass:      id: __taint_src,\n  17:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: newParams\n  18:  Var Pass:    const newParams = {\n  19:  Var Pass:      score: 100,\n  20:  Var Pass:      ...params,\n  21:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: __taint_sink\n  22:  SINK:    __taint_sink(newParams)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\nLine 22: __taint_sink(newParams)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\",\"functionName\":\"spread_operator_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function spread_operator_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: params\n  13:  Var Pass:    const params = {\n  14:  Var Pass:      name: 'Tony',\n  15:  Var Pass:      age: '12',\n  16:  Var Pass:      id: __taint_src,\n  17:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: newParams\n  18:  Var Pass:    const newParams = {\n  19:  Var Pass:      score: 100,\n  20:  Var Pass:      ...params,\n  21:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_003_T\n  AffectedNodeName: __taint_sink\n  22:  SINK:    __taint_sink(newParams)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\nLine 16: __taint_sink(rest)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  spread_operator_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: spread_operator_005_T\n  21:  CALL:  spread_operator_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function spread_operator_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: foo\n  13:  Var Pass:    const foo = __taint_src;\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: __tmp0__\n  15:  Var Pass:    const [ r1, r2, ...rest ] = [ 123, 456,foo,bar ];\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: rest\n  15:  Var Pass:   const [ r1, r2, ...rest ] = [ 123, 456,foo,bar ];\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(rest)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\nLine 16: __taint_sink(rest)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\",\"functionName\":\"spread_operator_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function spread_operator_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: foo\n  13:  Var Pass:    const foo = __taint_src;\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: __tmp0__\n  15:  Var Pass:    const [ r1, r2, ...rest ] = [ 123, 456,foo,bar ];\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: rest\n  15:  Var Pass:   const [ r1, r2, ...rest ] = [ 123, 456,foo,bar ];\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_005_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(rest)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/spread_operator_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  template_literal_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\n  AffectedNodeName: template_literal_001_T\n  19:  CALL:  template_literal_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function template_literal_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = `_${__taint_src}`\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\",\"functionName\":\"template_literal_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function template_literal_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = `_${__taint_src}`\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  template_literal_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\n  AffectedNodeName: template_literal_003_T\n  19:  CALL:  template_literal_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function template_literal_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = `${__taint_src}_`\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\",\"functionName\":\"template_literal_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function template_literal_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = `${__taint_src}_`\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_003_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  template_literal_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\n  AffectedNodeName: template_literal_005_T\n  19:  CALL:  template_literal_005_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function template_literal_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = `_${__taint_src}_`\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\",\"functionName\":\"template_literal_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function template_literal_005_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = `_${__taint_src}_`\n /jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_005_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/special_expression/template_literal_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\nLine 21: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  this_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: this_expression_001_T\n  26:  CALL:  this_expression_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function this_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = {\n  14:  Var Pass:      value: __taint_src,\n  15:  Var Pass:      getValue: function () {\n  16:  Var Pass:        return this.value\n  17:  Var Pass:      },\n  18:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: <anonymous_15_15>\n  20:  CALL:    let result = obj.getValue()\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: obj\n  20:  ARG PASS:    let result = obj.getValue()\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:        return this.value\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: <anonymous_15_15>\n  20:  CALL RETURN:   let result = obj.getValue()\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: result\n  20:  Var Pass:    let result = obj.getValue()\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\nLine 21: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\",\"functionName\":\"this_expression_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function this_expression_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = {\n  14:  Var Pass:      value: __taint_src,\n  15:  Var Pass:      getValue: function () {\n  16:  Var Pass:        return this.value\n  17:  Var Pass:      },\n  18:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: <anonymous_15_15>\n  20:  CALL:    let result = obj.getValue()\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: obj\n  20:  ARG PASS:    let result = obj.getValue()\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:        return this.value\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: <anonymous_15_15>\n  20:  CALL RETURN:   let result = obj.getValue()\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: result\n  20:  Var Pass:    let result = obj.getValue()\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\nLine 16: __taint_sink(this.result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  this_expression_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\n  AffectedNodeName: this_expression_003_T\n  20:  CALL:  this_expression_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\n  AffectedNodeName: __taint_src\n  14:  ARG PASS:  function this_expression_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\n  AffectedNodeName: [this.result]\n  15:  Var Pass:   this.result = __taint_src\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(this.result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\nLine 16: __taint_sink(this.result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\",\"functionName\":\"this_expression_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\n  AffectedNodeName: __taint_src\n  14:  SOURCE:  function this_expression_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\n  AffectedNodeName: [this.result]\n  15:  Var Pass:   this.result = __taint_src\n /jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_003_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(this.result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/this_expression/this_expression_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  type_cast_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\n  AffectedNodeName: type_cast_001_T\n  19:  CALL:  type_cast_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function type_cast_001_T(__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\n  AffectedNodeName: result\n  13:  Var Pass:      let result = Number(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\",\"functionName\":\"type_cast_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function type_cast_001_T(__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\n  AffectedNodeName: result\n  13:  Var Pass:      let result = Number(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  type_cast_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\n  AffectedNodeName: type_cast_003_T\n  19:  CALL:  type_cast_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function type_cast_003_T(__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src == 5\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\",\"functionName\":\"type_cast_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function type_cast_003_T(__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src == 5\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_003_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  type_cast_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\n  AffectedNodeName: type_cast_004_T\n  19:  CALL:  type_cast_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function type_cast_004_T(__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src == \"5\"\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\nLine 14: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\",\"functionName\":\"type_cast_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function type_cast_004_T(__taint_src) {\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\n  AffectedNodeName: result\n  13:  Var Pass:    let result = __taint_src == \"5\"\n /jsbenchmark/completeness/chain_tracing/expression/type_cast/type_cast_004_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\nLine 14: __taint_sink(process(__taint_src, foo))\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: __taint_src\n  18:  SOURCE:  anonymous_function_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: anonymous_function_002_T\n  18:  CALL:  anonymous_function_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function anonymous_function_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: <anonymous_11_19>\n  14:  CALL:    __taint_sink(process(__taint_src, 'foo'))\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: a\n  11:  ARG PASS:    const process = function (a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: [return value]\n  12:  Return Value:      return a + b\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: <anonymous_11_19>\n  14:  CALL RETURN:   __taint_sink(process(__taint_src, 'foo'))\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(process(__taint_src, 'foo'))\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\nLine 14: __taint_sink(process(__taint_src, foo))\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\",\"functionName\":\"anonymous_function_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function anonymous_function_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: <anonymous_11_19>\n  14:  CALL:    __taint_sink(process(__taint_src, 'foo'))\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: a\n  11:  ARG PASS:    const process = function (a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: [return value]\n  12:  Return Value:      return a + b\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: <anonymous_11_19>\n  14:  CALL RETURN:   __taint_sink(process(__taint_src, 'foo'))\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_002_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(process(__taint_src, 'foo'))\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\nLine 12: __taint_sink(input)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  anonymous_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: anonymous_function_004_T\n  19:  CALL:  anonymous_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function anonymous_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: <anonymous_11_17>\n  15:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: input\n  11:  ARG PASS:    let process = function (input) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:      __taint_sink(input)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\nLine 12: __taint_sink(input)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\",\"functionName\":\"anonymous_function_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function anonymous_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: <anonymous_11_17>\n  15:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: input\n  11:  ARG PASS:    let process = function (input) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_004_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:      __taint_sink(input)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_005_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\nLine 12: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\n  AffectedNodeName: __taint_src\n  17:  SOURCE:  anonymous_function_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\n  AffectedNodeName: anonymous_function_006_T\n  17:  CALL:  anonymous_function_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function anonymous_function_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\nLine 12: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\",\"functionName\":\"anonymous_function_006_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function anonymous_function_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/anonymous_function_006_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\nLine 12: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\n  AffectedNodeName: __taint_src\n  18:  SOURCE:  closure_function_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\n  AffectedNodeName: closure_function_002_T\n  18:  CALL:  closure_function_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function closure_function_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\nLine 12: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\",\"functionName\":\"closure_function_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function closure_function_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_002_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:      __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\nLine 13: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  closure_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\n  AffectedNodeName: closure_function_004_T\n  22:  CALL:  closure_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function closure_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\n  AffectedNodeName: __taint_sink\n  13:  SINK:        __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\nLine 13: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\",\"functionName\":\"closure_function_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function closure_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_004_T\n  AffectedNodeName: __taint_sink\n  13:  SINK:        __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_005_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\nLine 26: __taint_sink(a.update())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: __taint_src\n  30:  SOURCE:  closure_function_007_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: closure_function_007_T\n  30:  CALL:  closure_function_007_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function closure_function_007_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: source\n  16:  Var Pass:         source = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: [return value]\n  17:  Return Value:          return source\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: <anonymous_15_15>\n  26:  CALL RETURN:   __taint_sink(a.update())\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: __taint_sink\n  26:  SINK:    __taint_sink(a.update())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\nLine 26: __taint_sink(a.update())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\",\"functionName\":\"closure_function_007_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function closure_function_007_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: source\n  16:  Var Pass:         source = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: [return value]\n  17:  Return Value:          return source\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: <anonymous_15_15>\n  26:  CALL RETURN:   __taint_sink(a.update())\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_007_T\n  AffectedNodeName: __taint_sink\n  26:  SINK:    __taint_sink(a.update())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_008_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\nLine 19: __taint_sink(middleVar)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: __taint_src\n  30:  SOURCE:  closure_function_009_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: closure_function_009_T\n  30:  CALL:  closure_function_009_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function closure_function_009_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: outerVar\n  13:  Var Pass:      let outerVar = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: middleVar\n  16:  Var Pass:        let middleVar = outerVar\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:          __taint_sink(middleVar)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\nLine 19: __taint_sink(middleVar)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\",\"functionName\":\"closure_function_009_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function closure_function_009_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: outerVar\n  13:  Var Pass:      let outerVar = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: middleVar\n  16:  Var Pass:        let middleVar = outerVar\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_009_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:          __taint_sink(middleVar)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_010_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\nLine 18: __taint_sink(outerVar)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\n  AffectedNodeName: __taint_src\n  29:  SOURCE:  closure_function_011_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\n  AffectedNodeName: closure_function_011_T\n  29:  CALL:  closure_function_011_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function closure_function_011_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\n  AffectedNodeName: outerVar\n  13:  Var Pass:      let outerVar = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:          __taint_sink(outerVar)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\nLine 18: __taint_sink(outerVar)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\",\"functionName\":\"closure_function_011_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function closure_function_011_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\n  AffectedNodeName: outerVar\n  13:  Var Pass:      let outerVar = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_011_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:          __taint_sink(outerVar)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_012_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\nLine 14: __taint_sink(this.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  closure_function_013_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: closure_function_013_T\n  21:  CALL:  closure_function_013_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function closure_function_013_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: data\n  11:  Var Pass:    var data = {\n  12:  Var Pass:      name: __taint_src,\n  13:  Var Pass:      show: function () {\n  14:  Var Pass:        __taint_sink(this.name)\n  15:  Var Pass:      },\n  16:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: <anonymous_13_11>\n  17:  CALL:    data.show()\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: data\n  17:  ARG PASS:    data.show()\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:        __taint_sink(this.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\nLine 14: __taint_sink(this.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\",\"functionName\":\"closure_function_013_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function closure_function_013_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: data\n  11:  Var Pass:    var data = {\n  12:  Var Pass:      name: __taint_src,\n  13:  Var Pass:      show: function () {\n  14:  Var Pass:        __taint_sink(this.name)\n  15:  Var Pass:      },\n  16:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: <anonymous_13_11>\n  17:  CALL:    data.show()\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: data\n  17:  ARG PASS:    data.show()\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_013_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:        __taint_sink(this.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_014_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\nLine 15: __taint_sink(this.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  closure_function_015_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: closure_function_015_T\n  23:  CALL:  closure_function_015_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function closure_function_015_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: data\n  11:  Var Pass:    var data = {\n  12:  Var Pass:      name: __taint_src,\n  13:  Var Pass:      show: function () {\n  14:  Var Pass:        return function () {\n  15:  Var Pass:          __taint_sink(this.name)\n  16:  Var Pass:        }\n  17:  Var Pass:      },\n  18:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: <anonymous_13_11>\n  19:  CALL:    data.show().call(data)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: data\n  19:  ARG PASS:    data.show().call(data)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:          __taint_sink(this.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\nLine 15: __taint_sink(this.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\",\"functionName\":\"closure_function_015_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function closure_function_015_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: data\n  11:  Var Pass:    var data = {\n  12:  Var Pass:      name: __taint_src,\n  13:  Var Pass:      show: function () {\n  14:  Var Pass:        return function () {\n  15:  Var Pass:          __taint_sink(this.name)\n  16:  Var Pass:        }\n  17:  Var Pass:      },\n  18:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: <anonymous_13_11>\n  19:  CALL:    data.show().call(data)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: data\n  19:  ARG PASS:    data.show().call(data)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_015_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:          __taint_sink(this.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_016_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\nLine 14: __taint_sink(this.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  closure_function_017_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: closure_function_017_T\n  23:  CALL:  closure_function_017_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function closure_function_017_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: Process\n  18:  CALL:    const p = new Process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: data\n  11:  ARG PASS:    function Process (data) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: [this.data]\n  12:  Var Pass:     this.data = data\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: p\n  18:  Var Pass:    const p = new Process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: <anonymous_13_17>\n  19:  CALL:    p.show()\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: p\n  19:  ARG PASS:    p.show()\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:        __taint_sink(this.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\nLine 14: __taint_sink(this.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\",\"functionName\":\"closure_function_017_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function closure_function_017_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: Process\n  18:  CALL:    const p = new Process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: data\n  11:  ARG PASS:    function Process (data) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: [this.data]\n  12:  Var Pass:     this.data = data\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: p\n  18:  Var Pass:    const p = new Process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: <anonymous_13_17>\n  19:  CALL:    p.show()\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: p\n  19:  ARG PASS:    p.show()\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:        __taint_sink(this.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 3: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\nLine 14: __taint_sink(this.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function closure_function_017_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/anonymous_function_closure/closure_function_017_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:        __taint_sink(this.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:3\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\nLine 15: __taint_sink(input)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  argument_passing_default_value_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: argument_passing_default_value_002_T\n  20:  CALL:  argument_passing_default_value_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function argument_passing_default_value_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: process\n  12:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: __tmp0__\n  14:  ARG PASS:    function process (input = 'default_value') {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: input\n  14:  Var Pass:    function process (input = 'default_value') {\n  15:  Var Pass:      __taint_sink(input)\n  16:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(input)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\nLine 15: __taint_sink(input)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\",\"functionName\":\"argument_passing_default_value_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function argument_passing_default_value_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: process\n  12:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: __tmp0__\n  14:  ARG PASS:    function process (input = 'default_value') {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: input\n  14:  Var Pass:    function process (input = 'default_value') {\n  15:  Var Pass:      __taint_sink(input)\n  16:  Var Pass:    }\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_default_value_002_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(input)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\nLine 14: __taint_sink(obj.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  argument_passing_reference_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\n  AffectedNodeName: argument_passing_reference_002_T\n  22:  CALL:  argument_passing_reference_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function argument_passing_reference_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\n  AffectedNodeName: [obj.data]\n  17:  Var Pass:     obj.data = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(obj.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\nLine 14: __taint_sink(obj.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\",\"functionName\":\"argument_passing_reference_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function argument_passing_reference_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\n  AffectedNodeName: [obj.data]\n  17:  Var Pass:     obj.data = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_002_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(obj.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\nLine 14: __taint_sink(arr)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  argument_passing_reference_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\n  AffectedNodeName: argument_passing_reference_004_T\n  23:  CALL:  argument_passing_reference_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function argument_passing_reference_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\n  AffectedNodeName: inputArr[0]\n  17:  Var Pass:     inputArr[0] = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(arr)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\nLine 14: __taint_sink(arr)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\",\"functionName\":\"argument_passing_reference_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function argument_passing_reference_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\n  AffectedNodeName: inputArr[0]\n  17:  Var Pass:     inputArr[0] = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_004_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(arr)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_005_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\nLine 16: __taint_sink(objB.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: __taint_src\n  27:  SOURCE:  argument_passing_reference_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: argument_passing_reference_006_T\n  27:  CALL:  argument_passing_reference_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function argument_passing_reference_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: objA\n  12:  Var Pass:    const objA = { name: __taint_src }\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: swap\n  15:  CALL:    swap(objA, objB)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: obj1\n  18:  ARG PASS:    function swap (obj1, obj2) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: temp\n  19:  Var Pass:      const temp = obj1.name\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: [obj2.name]\n  21:  Var Pass:     obj2.name = temp\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(objB.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\nLine 16: __taint_sink(objB.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\",\"functionName\":\"argument_passing_reference_006_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function argument_passing_reference_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: objA\n  12:  Var Pass:    const objA = { name: __taint_src }\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: swap\n  15:  CALL:    swap(objA, objB)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: obj1\n  18:  ARG PASS:    function swap (obj1, obj2) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: temp\n  19:  Var Pass:      const temp = obj1.name\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: [obj2.name]\n  21:  Var Pass:     obj2.name = temp\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_reference_006_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:    __taint_sink(objB.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\nLine 15: __taint_sink(arg)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  argument_passing_value_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: argument_passing_value_002_T\n  20:  CALL:  argument_passing_value_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function argument_passing_value_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: process\n  12:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: arg\n  14:  ARG PASS:    function process (arg) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(arg)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\nLine 15: __taint_sink(arg)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\",\"functionName\":\"argument_passing_value_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function argument_passing_value_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: process\n  12:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: arg\n  14:  ARG PASS:    function process (arg) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_002_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(arg)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\nLine 15: __taint_sink(arg1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  argument_passing_value_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: argument_passing_value_004_T\n  20:  CALL:  argument_passing_value_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function argument_passing_value_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: process\n  12:  CALL:    process(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: arg1\n  14:  ARG PASS:    function process (arg1, arg2) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(arg1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\nLine 15: __taint_sink(arg1)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\",\"functionName\":\"argument_passing_value_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function argument_passing_value_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: process\n  12:  CALL:    process(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: arg1\n  14:  ARG PASS:    function process (arg1, arg2) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_004_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(arg1)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_005_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\nLine 14: __taint_sink(innerInput)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: __taint_src\n  24:  SOURCE:  argument_passing_value_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: argument_passing_value_006_T\n  24:  CALL:  argument_passing_value_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function argument_passing_value_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: outer\n  20:  CALL:    outer(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: input\n  12:  ARG PASS:    function outer (input) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: inner\n  17:  CALL:      inner(input)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: innerInput\n  13:  ARG PASS:      function inner (innerInput) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:        __taint_sink(innerInput)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\nLine 14: __taint_sink(innerInput)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\",\"functionName\":\"argument_passing_value_006_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function argument_passing_value_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: outer\n  20:  CALL:    outer(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: input\n  12:  ARG PASS:    function outer (input) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: inner\n  17:  CALL:      inner(input)\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: innerInput\n  13:  ARG PASS:      function inner (innerInput) {\n /jsbenchmark/completeness/chain_tracing/function_call/argument_passing/argument_passing_value_006_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:        __taint_sink(innerInput)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\nLine 12: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\n  AffectedNodeName: __taint_src\n  17:  SOURCE:  arrow_function_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\n  AffectedNodeName: arrow_function_002_T\n  17:  CALL:  arrow_function_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function arrow_function_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:    let arrowFunction = () => __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\nLine 12: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\",\"functionName\":\"arrow_function_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function arrow_function_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_002_T\n  AffectedNodeName: __taint_sink\n  12:  SINK:    let arrowFunction = () => __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\n  AffectedNodeName: __taint_src\n  24:  SOURCE:  arrow_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\n  AffectedNodeName: arrow_function_004_T\n  24:  CALL:  arrow_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function arrow_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:        __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\nLine 15: __taint_sink(__taint_src)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\",\"functionName\":\"arrow_function_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function arrow_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_004_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:        __taint_sink(__taint_src)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_005_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\nLine 15: __taint_sink(self.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  arrow_function_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\n  AffectedNodeName: arrow_function_006_T\n  21:  CALL:  arrow_function_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function arrow_function_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\n  AffectedNodeName: [this.name]\n  12:  Var Pass:   this.name = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      show: () => __taint_sink(self.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\nLine 15: __taint_sink(self.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\",\"functionName\":\"arrow_function_006_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function arrow_function_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\n  AffectedNodeName: [this.name]\n  12:  Var Pass:   this.name = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_006_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      show: () => __taint_sink(self.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_007_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\nLine 16: __taint_sink(self.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  arrow_function_008_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\n  AffectedNodeName: arrow_function_008_T\n  23:  CALL:  arrow_function_008_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function arrow_function_008_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\n  AffectedNodeName: [this.name]\n  12:  Var Pass:   this.name = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:        return () => __taint_sink(self.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\nLine 16: __taint_sink(self.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\",\"functionName\":\"arrow_function_008_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function arrow_function_008_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\n  AffectedNodeName: [this.name]\n  12:  Var Pass:   this.name = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_008_T\n  AffectedNodeName: __taint_sink\n  16:  SINK:        return () => __taint_sink(self.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_009_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\nLine 14: __taint_sink(this.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  arrow_function_010_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: arrow_function_010_T\n  22:  CALL:  arrow_function_010_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function arrow_function_010_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: Process\n  17:  CALL:    const p = new Process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: data\n  12:  ARG PASS:    function Process (data) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: [this.data]\n  13:  Var Pass:     this.data = data\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: p\n  17:  Var Pass:    const p = new Process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: <anonymous_14_17>\n  18:  CALL:    p.show()\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: p\n  18:  ARG PASS:    p.show()\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      this.show = () => __taint_sink(this.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\nLine 14: __taint_sink(this.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\",\"functionName\":\"arrow_function_010_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function arrow_function_010_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: Process\n  17:  CALL:    const p = new Process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: data\n  12:  ARG PASS:    function Process (data) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: [this.data]\n  13:  Var Pass:     this.data = data\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: p\n  17:  Var Pass:    const p = new Process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: <anonymous_14_17>\n  18:  CALL:    p.show()\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: p\n  18:  ARG PASS:    p.show()\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      this.show = () => __taint_sink(this.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 3: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\nLine 14: __taint_sink(this.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function arrow_function_010_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/arrow_function/arrow_function_010_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:      this.show = () => __taint_sink(this.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:3\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\nLine 28: __taint_sink(this.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: __taint_src\n  36:  SOURCE:  chained_call_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: chained_call_002_T\n  36:  CALL:  chained_call_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function chained_call_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: setName\n  32:  CALL:    new A().setName('_').clearName().setName(__taint_src).process()\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: name\n  17:  ARG PASS:      setName (name) {\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: [this.name]\n  18:  Var Pass:       this.name = name\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: [return value]\n  19:  Return Value:        return this\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: setName\n  32:  CALL RETURN:   new A().setName('_').clearName().setName(__taint_src).process()\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  32:  ARG PASS:    new A().setName('_').clearName().setName(__taint_src).process()\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:        __taint_sink(this.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\nLine 28: __taint_sink(this.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\",\"functionName\":\"chained_call_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function chained_call_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: setName\n  32:  CALL:    new A().setName('_').clearName().setName(__taint_src).process()\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: name\n  17:  ARG PASS:      setName (name) {\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: [this.name]\n  18:  Var Pass:       this.name = name\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: [return value]\n  19:  Return Value:        return this\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: setName\n  32:  CALL RETURN:   new A().setName('_').clearName().setName(__taint_src).process()\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  32:  ARG PASS:    new A().setName('_').clearName().setName(__taint_src).process()\n /jsbenchmark/completeness/chain_tracing/function_call/chained_call/chained_call_002_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:        __taint_sink(this.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_decorator_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_decorator_002_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_decorator_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_decorator_004_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\nLine 19: __taint_sink(taintData)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: __taint_src\n  32:  SOURCE:  class_member_decorator_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: class_member_decorator_002_T\n  32:  CALL:  class_member_decorator_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function class_member_decorator_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: args\n  17:  Var Pass:     descriptor.value = function (...args) {\n  18:  Var Pass:       const taintData = args[0]\n  19:  Var Pass:       __taint_sink(taintData)\n  20:  Var Pass:       return originalMethod.apply(this, args)\n  21:  Var Pass:     }\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: taintData\n  18:  Var Pass:        const taintData = args[0]\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:        __taint_sink(taintData)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\nLine 19: __taint_sink(taintData)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\",\"functionName\":\"class_member_decorator_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function class_member_decorator_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: args\n  17:  Var Pass:     descriptor.value = function (...args) {\n  18:  Var Pass:       const taintData = args[0]\n  19:  Var Pass:       __taint_sink(taintData)\n  20:  Var Pass:       return originalMethod.apply(this, args)\n  21:  Var Pass:     }\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: taintData\n  18:  Var Pass:        const taintData = args[0]\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/class_member_decorator_002_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:        __taint_sink(taintData)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\nLine 14: __taint_sink(args)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  function_decorator_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: function_decorator_002_T\n  26:  CALL:  function_decorator_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function function_decorator_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: <anonymous_13_12>\n  21:  CALL:    decoratedFunction(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: __tmp0__\n  13:  ARG PASS:      return function (...args) {\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: args\n  13:  Var Pass:     return function (...args) {\n  14:  Var Pass:       __taint_sink(args)\n  15:  Var Pass:       return targetFunction.apply(this, args)\n  16:  Var Pass:     }\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:        __taint_sink(args)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\nLine 14: __taint_sink(args)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\",\"functionName\":\"function_decorator_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function function_decorator_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: <anonymous_13_12>\n  21:  CALL:    decoratedFunction(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: __tmp0__\n  13:  ARG PASS:      return function (...args) {\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: args\n  13:  Var Pass:     return function (...args) {\n  14:  Var Pass:       __taint_sink(args)\n  15:  Var Pass:       return targetFunction.apply(this, args)\n  16:  Var Pass:     }\n /jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_002_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:        __taint_sink(args)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/decorator_function/function_decorator_004_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_002_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\nLine 22: __taint_sink(g.next(__taint_src).value)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  generator_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\n  AffectedNodeName: generator_function_004_T\n  26:  CALL:  generator_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function generator_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\n  AffectedNodeName: __taint_sink\n  22:  SINK:    __taint_sink(g.next(__taint_src).value)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\nLine 22: __taint_sink(g.next(__taint_src).value)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\",\"functionName\":\"generator_function_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function generator_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/generator_function/generator_function_004_T\n  AffectedNodeName: __taint_sink\n  22:  SINK:    __taint_sink(g.next(__taint_src).value)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\nLine 19: __taint_sink(f(__taint_src, _)())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  higher_order_function_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: higher_order_function_002_T\n  23:  CALL:  higher_order_function_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function higher_order_function_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: f\n  19:  CALL:    __taint_sink(f(__taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: a\n  12:  ARG PASS:    function f (a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: [return value]\n  15:  Return Value:        return a + b + c\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: <anonymous_14_12>\n  19:  CALL RETURN:   __taint_sink(f(__taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(f(__taint_src, '_')())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\nLine 19: __taint_sink(f(__taint_src, _)())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\",\"functionName\":\"higher_order_function_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function higher_order_function_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: f\n  19:  CALL:    __taint_sink(f(__taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: a\n  12:  ARG PASS:    function f (a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: [return value]\n  15:  Return Value:        return a + b + c\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: <anonymous_14_12>\n  19:  CALL RETURN:   __taint_sink(f(__taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_002_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(f(__taint_src, '_')())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_003_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\nLine 23: __taint_sink(f(g, __taint_src, _)())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: __taint_src\n  27:  SOURCE:  higher_order_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: higher_order_function_004_T\n  27:  CALL:  higher_order_function_004_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function higher_order_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: f\n  23:  CALL:    __taint_sink(f(g, __taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: a\n  12:  ARG PASS:    function f (g, a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: g\n  13:  CALL:      return g(a, b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: a\n  16:  ARG PASS:    function g (a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: [return value]\n  19:  Return Value:        return a + b + c\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: <anonymous_18_12>\n  23:  CALL RETURN:   __taint_sink(f(g, __taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: __taint_sink\n  23:  SINK:    __taint_sink(f(g, __taint_src, '_')())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\nLine 23: __taint_sink(f(g, __taint_src, _)())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\",\"functionName\":\"higher_order_function_004_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function higher_order_function_004_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: f\n  23:  CALL:    __taint_sink(f(g, __taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: a\n  12:  ARG PASS:    function f (g, a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: g\n  13:  CALL:      return g(a, b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: a\n  16:  ARG PASS:    function g (a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: [return value]\n  19:  Return Value:        return a + b + c\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: <anonymous_18_12>\n  23:  CALL RETURN:   __taint_sink(f(g, __taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_004_T\n  AffectedNodeName: __taint_sink\n  23:  SINK:    __taint_sink(f(g, __taint_src, '_')())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_005_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\nLine 27: __taint_sink(f(g, u, __taint_src, _)())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: __taint_src\n  31:  SOURCE:  higher_order_function_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: higher_order_function_006_T\n  31:  CALL:  higher_order_function_006_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function higher_order_function_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: f\n  27:  CALL:    __taint_sink(f(g, u, __taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: a\n  12:  ARG PASS:    function f (g, u, a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: g\n  13:  CALL:      return g(u, a, b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: a\n  16:  ARG PASS:    function g (u, a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: u\n  18:  CALL:      return u(a, b, c)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: a\n  21:  ARG PASS:    function u (a, b, c) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: [return value]\n  23:  Return Value:        return a + b + c\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: <anonymous_22_12>\n  27:  CALL RETURN:   __taint_sink(f(g, u, __taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: __taint_sink\n  27:  SINK:    __taint_sink(f(g, u, __taint_src, '_')())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\nLine 27: __taint_sink(f(g, u, __taint_src, _)())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\",\"functionName\":\"higher_order_function_006_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function higher_order_function_006_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: f\n  27:  CALL:    __taint_sink(f(g, u, __taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: a\n  12:  ARG PASS:    function f (g, u, a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: g\n  13:  CALL:      return g(u, a, b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: a\n  16:  ARG PASS:    function g (u, a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: u\n  18:  CALL:      return u(a, b, c)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: a\n  21:  ARG PASS:    function u (a, b, c) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: [return value]\n  23:  Return Value:        return a + b + c\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: <anonymous_22_12>\n  27:  CALL RETURN:   __taint_sink(f(g, u, __taint_src, '_')())\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_006_T\n  AffectedNodeName: __taint_sink\n  27:  SINK:    __taint_sink(f(g, u, __taint_src, '_')())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_007_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\nLine 17: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  higher_order_function_008_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: higher_order_function_008_T\n  21:  CALL:  higher_order_function_008_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function higher_order_function_008_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: <anonymous_16_38>\n  13:  CALL:      return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: a\n  16:  ARG PASS:    const result = higherOrderFunction((a, b) => a + b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: [return value]\n  16:  Return Value:    const result = higherOrderFunction((a, b) => a + b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: <anonymous_16_38>\n  13:  CALL RETURN:     return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: [return value]\n  13:  Return Value:      return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: higherOrderFunction\n  16:  CALL RETURN:   const result = higherOrderFunction((a, b) => a + b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: result\n  16:  Var Pass:    const result = higherOrderFunction((a, b) => a + b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\nLine 17: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\",\"functionName\":\"higher_order_function_008_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function higher_order_function_008_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: <anonymous_16_38>\n  13:  CALL:      return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: a\n  16:  ARG PASS:    const result = higherOrderFunction((a, b) => a + b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: [return value]\n  16:  Return Value:    const result = higherOrderFunction((a, b) => a + b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: <anonymous_16_38>\n  13:  CALL RETURN:     return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: [return value]\n  13:  Return Value:      return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: higherOrderFunction\n  16:  CALL RETURN:   const result = higherOrderFunction((a, b) => a + b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: result\n  16:  Var Pass:    const result = higherOrderFunction((a, b) => a + b)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_008_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_009_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\nLine 19: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  higher_order_function_010_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: higher_order_function_010_T\n  23:  CALL:  higher_order_function_010_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function higher_order_function_010_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: <anonymous_16_38>\n  13:  CALL:      return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: a\n  16:  ARG PASS:    const result = higherOrderFunction(function (a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: [return value]\n  17:  Return Value:      return a + b\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: <anonymous_16_38>\n  13:  CALL RETURN:     return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: [return value]\n  13:  Return Value:      return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: higherOrderFunction\n  16:  CALL RETURN:   const result = higherOrderFunction(function (a, b) {\n  17:  CALL RETURN:     return a + b\n  18:  CALL RETURN:   })\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: result\n  16:  Var Pass:    const result = higherOrderFunction(function (a, b) {\n  17:  Var Pass:      return a + b\n  18:  Var Pass:    })\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\nLine 19: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\",\"functionName\":\"higher_order_function_010_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function higher_order_function_010_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: <anonymous_16_38>\n  13:  CALL:      return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: a\n  16:  ARG PASS:    const result = higherOrderFunction(function (a, b) {\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: [return value]\n  17:  Return Value:      return a + b\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: <anonymous_16_38>\n  13:  CALL RETURN:     return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: [return value]\n  13:  Return Value:      return callback(__taint_src, '_')\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: higherOrderFunction\n  16:  CALL RETURN:   const result = higherOrderFunction(function (a, b) {\n  17:  CALL RETURN:     return a + b\n  18:  CALL RETURN:   })\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: result\n  16:  Var Pass:    const result = higherOrderFunction(function (a, b) {\n  17:  Var Pass:      return a + b\n  18:  Var Pass:    })\n /jsbenchmark/completeness/chain_tracing/function_call/higher_order_function/higher_order_function_010_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\nLine 15: __taint_sink(obj)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  json_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: json_001_T\n  20:  CALL:  json_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function json_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: process\n  11:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: arg\n  13:  ARG PASS:    function process (arg) {\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: obj\n  14:  Var Pass:      let obj = JSON.parse(arg)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(obj)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\nLine 15: __taint_sink(obj)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\",\"functionName\":\"json_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function json_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: process\n  11:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: arg\n  13:  ARG PASS:    function process (arg) {\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: obj\n  14:  Var Pass:      let obj = JSON.parse(arg)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/json_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(obj)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/library_function/json_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  string_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: string_001_T\n  20:  CALL:  string_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function string_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: process\n  11:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: arg\n  13:  ARG PASS:    function process (arg) {\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: result\n  14:  Var Pass:      let result = arg.trim()\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\nLine 15: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\",\"functionName\":\"string_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function string_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: process\n  11:  CALL:    process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: arg\n  13:  ARG PASS:    function process (arg) {\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: result\n  14:  Var Pass:      let result = arg.trim()\n /jsbenchmark/completeness/chain_tracing/function_call/library_function/string_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:      __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/library_function/string_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\nLine 31: __taint_sink(this.getData())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: __taint_src\n  40:  SOURCE:  constructor_extends_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: constructor_extends_001_T\n  40:  CALL:  constructor_extends_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function constructor_extends_001_T(__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: constructor\n  35:  CALL:    const derived = new DerivedClass(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: data\n  26:  ARG PASS:      constructor(data) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: constructor\n  27:  CALL:        super(data)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: data\n  14:  ARG PASS:      constructor(data) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = data\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: derived\n  35:  Var Pass:    const derived = new DerivedClass(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: process\n  36:  CALL:    derived.process()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: derived\n  36:  ARG PASS:    derived.process()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: getData\n  31:  CALL:        __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  31:  ARG PASS:        __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: [return value]\n  19:  Return Value:        return this.data\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: getData\n  31:  CALL RETURN:       __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: __taint_sink\n  31:  SINK:        __taint_sink(this.getData())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\nLine 31: __taint_sink(this.getData())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\",\"functionName\":\"constructor_extends_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function constructor_extends_001_T(__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: constructor\n  35:  CALL:    const derived = new DerivedClass(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: data\n  26:  ARG PASS:      constructor(data) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: constructor\n  27:  CALL:        super(data)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: data\n  14:  ARG PASS:      constructor(data) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = data\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: derived\n  35:  Var Pass:    const derived = new DerivedClass(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: process\n  36:  CALL:    derived.process()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: derived\n  36:  ARG PASS:    derived.process()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: getData\n  31:  CALL:        __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  31:  ARG PASS:        __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: [return value]\n  19:  Return Value:        return this.data\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: getData\n  31:  CALL RETURN:       __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_001_T\n  AffectedNodeName: __taint_sink\n  31:  SINK:        __taint_sink(this.getData())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\nLine 29: __taint_sink(this.getData())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: __taint_src\n  38:  SOURCE:  constructor_extends_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: constructor_extends_003_T\n  38:  CALL:  constructor_extends_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function constructor_extends_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: [this.data]\n  13:  Var Pass:       this.data = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: derived\n  33:  Var Pass:    const derived = new DerivedClass()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: process\n  34:  CALL:    derived.process()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: derived\n  34:  ARG PASS:    derived.process()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: getData\n  29:  CALL:        __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  29:  ARG PASS:        __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: [return value]\n  17:  Return Value:        return this.data\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: getData\n  29:  CALL RETURN:       __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: __taint_sink\n  29:  SINK:        __taint_sink(this.getData())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\nLine 29: __taint_sink(this.getData())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\",\"functionName\":\"constructor_extends_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function constructor_extends_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: [this.data]\n  13:  Var Pass:       this.data = __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: derived\n  33:  Var Pass:    const derived = new DerivedClass()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: process\n  34:  CALL:    derived.process()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: derived\n  34:  ARG PASS:    derived.process()\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: getData\n  29:  CALL:        __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  29:  ARG PASS:        __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: [return value]\n  17:  Return Value:        return this.data\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: getData\n  29:  CALL RETURN:       __taint_sink(this.getData())\n /jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_003_T\n  AffectedNodeName: __taint_sink\n  29:  SINK:        __taint_sink(this.getData())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/override/constructor_extends_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\nLine 28: __taint_sink(sub.call())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: __taint_src\n  33:  SOURCE:  polymorphism_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: polymorphism_001_T\n  33:  CALL:  polymorphism_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function polymorphism_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: [return value]\n  17:  Return Value:        return __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: call\n  28:  CALL RETURN:   __taint_sink(sub.call())\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:    __taint_sink(sub.call())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\nLine 28: __taint_sink(sub.call())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\",\"functionName\":\"polymorphism_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function polymorphism_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: [return value]\n  17:  Return Value:        return __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: call\n  28:  CALL RETURN:   __taint_sink(sub.call())\n /jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_001_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:    __taint_sink(sub.call())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/override/polymorphism_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\nLine 28: __taint_sink(instance.getChValue())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: __taint_src\n  34:  SOURCE:  prototype_extends_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: prototype_extends_001_T\n  34:  CALL:  prototype_extends_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: __taint_src\n  10:  ARG PASS:  function prototype_extends_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: [this.chProperty]\n  18:  Var Pass:     this.chProperty = __taint_src;\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: instance\n  27:  Var Pass:    let instance = new Child();\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: <anonymous_23_32>\n  28:  CALL:    __taint_sink(instance.getChValue());\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: instance\n  28:  ARG PASS:    __taint_sink(instance.getChValue());\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: [return value]\n  24:  Return Value:      return this.chProperty;\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: <anonymous_23_32>\n  28:  CALL RETURN:   __taint_sink(instance.getChValue());\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:    __taint_sink(instance.getChValue());\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\nLine 28: __taint_sink(instance.getChValue())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\",\"functionName\":\"prototype_extends_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: __taint_src\n  10:  SOURCE:  function prototype_extends_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: [this.chProperty]\n  18:  Var Pass:     this.chProperty = __taint_src;\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: instance\n  27:  Var Pass:    let instance = new Child();\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: <anonymous_23_32>\n  28:  CALL:    __taint_sink(instance.getChValue());\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: instance\n  28:  ARG PASS:    __taint_sink(instance.getChValue());\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: [return value]\n  24:  Return Value:      return this.chProperty;\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: <anonymous_23_32>\n  28:  CALL RETURN:   __taint_sink(instance.getChValue());\n /jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_001_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:    __taint_sink(instance.getChValue());\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/override/prototype_extends_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\nLine 21: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: __taint_src\n  25:  SOURCE:  recursive_function_direct_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: recursive_function_direct_001_T\n  25:  CALL:  recursive_function_direct_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function recursive_function_direct_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: recursiveFunc\n  20:  CALL:    let result = recursiveFunc(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: input\n  12:  ARG PASS:    function recursiveFunc (input, depth) {\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:        return input\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: recursiveFunc\n  20:  CALL RETURN:   let result = recursiveFunc(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: result\n  20:  Var Pass:    let result = recursiveFunc(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\nLine 21: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\",\"functionName\":\"recursive_function_direct_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function recursive_function_direct_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: recursiveFunc\n  20:  CALL:    let result = recursiveFunc(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: input\n  12:  ARG PASS:    function recursiveFunc (input, depth) {\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:        return input\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: recursiveFunc\n  20:  CALL RETURN:   let result = recursiveFunc(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: result\n  20:  Var Pass:    let result = recursiveFunc(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_direct_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\nLine 30: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: __taint_src\n  34:  SOURCE:  recursive_function_indirect_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: recursive_function_indirect_001_T\n  34:  CALL:  recursive_function_indirect_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function recursive_function_indirect_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: funcA\n  29:  CALL:    let result = funcA(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: input\n  13:  ARG PASS:    function funcA (input, depth) {\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: [return value]\n  25:  Return Value:        return input\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: funcB\n  15:  CALL RETURN:       return funcB(input + '_A', depth - 1)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: [return value]\n  15:  Return Value:        return funcB(input + '_A', depth - 1)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: [return value]\n  17:  Return Value:        return input\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: funcA\n  29:  CALL RETURN:   let result = funcA(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: result\n  29:  Var Pass:    let result = funcA(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: __taint_sink\n  30:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\nLine 30: __taint_sink(result)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\",\"functionName\":\"recursive_function_indirect_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function recursive_function_indirect_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: funcA\n  29:  CALL:    let result = funcA(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: input\n  13:  ARG PASS:    function funcA (input, depth) {\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: [return value]\n  25:  Return Value:        return input\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: funcB\n  15:  CALL RETURN:       return funcB(input + '_A', depth - 1)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: [return value]\n  15:  Return Value:        return funcB(input + '_A', depth - 1)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: [return value]\n  17:  Return Value:        return input\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: funcA\n  29:  CALL RETURN:   let result = funcA(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: result\n  29:  Var Pass:    let result = funcA(__taint_src, 3)\n /jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_001_T\n  AffectedNodeName: __taint_sink\n  30:  SINK:    __taint_sink(result)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/recursive_function/recursive_function_indirect_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\nLine 13: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  return_value_passing_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: return_value_passing_002_T\n  21:  CALL:  return_value_passing_002_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function return_value_passing_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: [return value]\n  16:  Return Value:      return __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: process\n  12:  CALL RETURN:   let data = process()\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: data\n  12:  Var Pass:    let data = process()\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: __taint_sink\n  13:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\nLine 13: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\",\"functionName\":\"return_value_passing_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function return_value_passing_002_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: [return value]\n  16:  Return Value:      return __taint_src\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: process\n  12:  CALL RETURN:   let data = process()\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: data\n  12:  Var Pass:    let data = process()\n /jsbenchmark/completeness/chain_tracing/function_call/return_value_passing/return_value_passing_002_T\n  AffectedNodeName: __taint_sink\n  13:  SINK:    __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\nLine 13: __taint_sink(arg)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  static_method_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: static_method_001_T\n  23:  CALL:  static_method_001_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: __taint_src\n  17:  ARG PASS:  function static_method_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: process\n  18:  CALL:    MyClass.process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: arg\n  12:  ARG PASS:    static process (arg) {\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: __taint_sink\n  13:  SINK:      __taint_sink(arg)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\nLine 13: __taint_sink(arg)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\",\"functionName\":\"static_method_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: __taint_src\n  17:  SOURCE:  function static_method_001_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: process\n  18:  CALL:    MyClass.process(__taint_src)\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: arg\n  12:  ARG PASS:    static process (arg) {\n /jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_001_T\n  AffectedNodeName: __taint_sink\n  13:  SINK:      __taint_sink(arg)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/static_method/static_method_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/tagged_template_literals/tagged_template_literal_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/function_call/tagged_template_literals/tagged_template_literal_002_T":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\nLine 15: __taint_sink(a.value)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  alias_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\n  AffectedNodeName: alias_003_T\n  20:  CALL:  alias_003_T(__taint_src)\n /jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\n  AffectedNodeName: __taint_src\n  11:  ARG PASS:  function alias_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\n  AffectedNodeName: [b.value]\n  14:  Var Pass:   b.value = __taint_src\n /jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(a.value)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\nLine 15: __taint_sink(a.value)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\",\"functionName\":\"alias_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\n  AffectedNodeName: __taint_src\n  11:  SOURCE:  function alias_003_T (__taint_src) {\n /jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\n  AffectedNodeName: [b.value]\n  14:  Var Pass:   b.value = __taint_src\n /jsbenchmark/completeness/chain_tracing/references_pointers/alias/alias_003_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(a.value)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_001_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\nLine 17: __taint_sink(Reflect.get(obj, name))\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: __taint_src\n  21:  SOURCE:  dynamic_call_reflect_002_T(__taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: dynamic_call_reflect_002_T\n  21:  CALL:  dynamic_call_reflect_002_T(__taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function dynamic_call_reflect_002_T (__taint_src) {\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = {\n  14:  Var Pass:      name: __taint_src\n  15:  Var Pass:    }\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: get\n  17:  CALL:    __taint_sink(Reflect.get(obj, 'name'))\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(Reflect.get(obj, 'name'))\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\nLine 17: __taint_sink(Reflect.get(obj, name))\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\",\"functionName\":\"dynamic_call_reflect_002_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function dynamic_call_reflect_002_T (__taint_src) {\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = {\n  14:  Var Pass:      name: __taint_src\n  15:  Var Pass:    }\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: get\n  17:  CALL:    __taint_sink(Reflect.get(obj, 'name'))\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_002_T\n  AffectedNodeName: __taint_sink\n  17:  SINK:    __taint_sink(Reflect.get(obj, 'name'))\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\nLine 18: __taint_sink(obj.foo)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: __taint_src\n  22:  SOURCE:  dynamic_call_reflect_003_T(__taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: dynamic_call_reflect_003_T\n  22:  CALL:  dynamic_call_reflect_003_T(__taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function dynamic_call_reflect_003_T (__taint_src) {\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: set\n  17:  CALL:    Reflect.set(obj, 'foo', __taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: obj\n  17:  Reflect.set Pass:    Reflect.set(obj, 'foo', __taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(obj.foo)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\nLine 18: __taint_sink(obj.foo)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\",\"functionName\":\"dynamic_call_reflect_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function dynamic_call_reflect_003_T (__taint_src) {\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: set\n  17:  CALL:    Reflect.set(obj, 'foo', __taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: obj\n  17:  Reflect.set Pass:    Reflect.set(obj, 'foo', __taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_003_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(obj.foo)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\nLine 19: __taint_sink(obj.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: __taint_src\n  24:  SOURCE:  dynamic_call_reflect_005_T(__taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: dynamic_call_reflect_005_T\n  24:  CALL:  dynamic_call_reflect_005_T(__taint_src)\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function dynamic_call_reflect_005_T (__taint_src) {\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = {\n  14:  Var Pass:      data: __taint_src,\n  15:  Var Pass:      data1: 'aaa'\n  16:  Var Pass:    }\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: deleteProperty\n  18:  CALL:    Reflect.deleteProperty(obj, 'data1')\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(obj.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\nLine 19: __taint_sink(obj.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\",\"functionName\":\"dynamic_call_reflect_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function dynamic_call_reflect_005_T (__taint_src) {\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: obj\n  13:  Var Pass:    let obj = {\n  14:  Var Pass:      data: __taint_src,\n  15:  Var Pass:      data1: 'aaa'\n  16:  Var Pass:    }\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: deleteProperty\n  18:  CALL:    Reflect.deleteProperty(obj, 'data1')\n /jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_005_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(obj.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/dynamic_tracing/dynamic_call/dynamic_call_reflect_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/array/array_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\nLine 14: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  array_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\n  AffectedNodeName: array_001_T\n  19:  CALL:  array_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function array_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [__taint_src, 'b', 'c']\n /jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\nLine 14: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\",\"functionName\":\"array_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function array_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [__taint_src, 'b', 'c']\n /jsbenchmark/completeness/object_tracing/datatype/array/array_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/array/array_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/array/array_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\nLine 14: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  array_003_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\n  AffectedNodeName: array_003_T\n  19:  CALL:  array_003_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function array_003_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [[__taint_src], ['b'], 'c']\n /jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\nLine 14: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\",\"functionName\":\"array_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function array_003_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\n  AffectedNodeName: s\n  13:  Var Pass:    let s = [[__taint_src], ['b'], 'c']\n /jsbenchmark/completeness/object_tracing/datatype/array/array_003_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/array/array_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/array/array_005_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\nLine 15: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\n  AffectedNodeName: __taint_src\n  20:  SOURCE:  array_005_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\n  AffectedNodeName: array_005_T\n  20:  CALL:  array_005_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function array_005_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\n  AffectedNodeName: push\n  14:  CALL:    s.push(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\nLine 15: __taint_sink(s)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\",\"functionName\":\"array_005_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function array_005_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\n  AffectedNodeName: push\n  14:  CALL:    s.push(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/array/array_005_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(s)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/array/array_006_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\nLine 14: __taint_sink(set)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\n  AffectedNodeName: __taint_src\n  18:  SOURCE:  set_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\n  AffectedNodeName: set_001_T\n  18:  CALL:  set_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function set_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\n  AffectedNodeName: set\n  13:  Var Pass:    let set = new Set(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(set)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\nLine 14: __taint_sink(set)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\",\"functionName\":\"set_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function set_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\n  AffectedNodeName: set\n  13:  Var Pass:    let set = new Set(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/collections/set_001_T\n  AffectedNodeName: __taint_sink\n  14:  SINK:    __taint_sink(set)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/collections/set_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/map/map_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\nLine 15: __taint_sink(map)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\n  AffectedNodeName: __taint_src\n  19:  SOURCE:  map_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\n  AffectedNodeName: map_001_T\n  19:  CALL:  map_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function map_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\n  AffectedNodeName: set\n  14:  CALL:    map.set('key1', __taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(map)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\nLine 15: __taint_sink(map)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\",\"functionName\":\"map_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function map_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\n  AffectedNodeName: set\n  14:  CALL:    map.set('key1', __taint_src)\n /jsbenchmark/completeness/object_tracing/datatype/map/map_001_T\n  AffectedNodeName: __taint_sink\n  15:  SINK:    __taint_sink(map)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/datatype/map/map_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\nLine 30: __taint_sink(obj)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: __taint_src\n  35:  SOURCE:  cross_class_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: cross_class_001_T\n  35:  CALL:  cross_class_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function cross_class_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = __taint_src\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: getData\n  25:  CALL:        this.data = new A().getData()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  25:  ARG PASS:        this.data = new A().getData()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: [return value]\n  19:  Return Value:        return this.data\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: getData\n  25:  CALL RETURN:       this.data = new A().getData()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: [this.data]\n  25:  Var Pass:       this.data = new A().getData()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: obj\n  29:  Var Pass:    let obj = new B()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: __taint_sink\n  30:  SINK:    __taint_sink(obj)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\nLine 30: __taint_sink(obj)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\",\"functionName\":\"cross_class_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function cross_class_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: [this.data]\n  15:  Var Pass:       this.data = __taint_src\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: getData\n  25:  CALL:        this.data = new A().getData()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  25:  ARG PASS:        this.data = new A().getData()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: [return value]\n  19:  Return Value:        return this.data\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: getData\n  25:  CALL RETURN:       this.data = new A().getData()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: [this.data]\n  25:  Var Pass:       this.data = new A().getData()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: obj\n  29:  Var Pass:    let obj = new B()\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_001_T\n  AffectedNodeName: __taint_sink\n  30:  SINK:    __taint_sink(obj)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\nLine 37: __taint_sink(a)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: __taint_src\n  42:  SOURCE:  cross_class_003_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: cross_class_003_T\n  42:  CALL:  cross_class_003_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function cross_class_003_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: setData\n  36:  CALL:    b.setData(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: data\n  29:  ARG PASS:      setData (data) {\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: [this.data]\n  30:  Var Pass:       this.data = data\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: __taint_sink\n  37:  SINK:    __taint_sink(a)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\nLine 37: __taint_sink(a)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\",\"functionName\":\"cross_class_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function cross_class_003_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: setData\n  36:  CALL:    b.setData(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: data\n  29:  ARG PASS:      setData (data) {\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: [this.data]\n  30:  Var Pass:       this.data = data\n /jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_003_T\n  AffectedNodeName: __taint_sink\n  37:  SINK:    __taint_sink(a)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/complex_object/cross_class_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\nLine 21: __taint_sink(obj)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: __taint_src\n  26:  SOURCE:  simple_object_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: simple_object_001_T\n  26:  CALL:  simple_object_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function simple_object_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: constructor\n  20:  CALL:    let obj = new A(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: data\n  15:  ARG PASS:      constructor (data) {\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: [this.data]\n  16:  Var Pass:       this.data = data\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: obj\n  20:  Var Pass:    let obj = new A(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(obj)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\nLine 21: __taint_sink(obj)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\",\"functionName\":\"simple_object_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function simple_object_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: constructor\n  20:  CALL:    let obj = new A(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: data\n  15:  ARG PASS:      constructor (data) {\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: [this.data]\n  16:  Var Pass:       this.data = data\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: obj\n  20:  Var Pass:    let obj = new A(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_001_T\n  AffectedNodeName: __taint_sink\n  21:  SINK:    __taint_sink(obj)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\nLine 19: __taint_sink(person.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: __taint_src\n  25:  SOURCE:  simple_object_prototype_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: simple_object_prototype_001_T\n  25:  CALL:  simple_object_prototype_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function simple_object_prototype_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: [[Person.prototype].name]\n  15:  Var Pass:   Person.prototype.name = __taint_src\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: person\n  17:  Var Pass:    let person = new Person()\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(person.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\nLine 19: __taint_sink(person.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\",\"functionName\":\"simple_object_prototype_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function simple_object_prototype_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: [[Person.prototype].name]\n  15:  Var Pass:   Person.prototype.name = __taint_src\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: person\n  17:  Var Pass:    let person = new Person()\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_001_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(person.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\nLine 19: __taint_sink(person.__proto__.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: __taint_src\n  24:  SOURCE:  simple_object_prototype_003_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: simple_object_prototype_003_T\n  24:  CALL:  simple_object_prototype_003_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function simple_object_prototype_003_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: [[Person.prototype].name]\n  15:  Var Pass:   Person.prototype.name = __taint_src\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: person\n  17:  Var Pass:    let person = new Person()\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(person.__proto__.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\nLine 19: __taint_sink(person.__proto__.name)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\",\"functionName\":\"simple_object_prototype_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function simple_object_prototype_003_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: [[Person.prototype].name]\n  15:  Var Pass:   Person.prototype.name = __taint_src\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: person\n  17:  Var Pass:    let person = new Person()\n /jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_003_T\n  AffectedNodeName: __taint_sink\n  19:  SINK:    __taint_sink(person.__proto__.name)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/interface_class/simple_object/simple_object_prototype_004_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\nLine 23: __taint_sink(o.GetData())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: __taint_src\n  27:  SOURCE:  private_variable_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: private_variable_001_T\n  27:  CALL:  private_variable_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function private_variable_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: data\n  14:  Var Pass:          #data = __taint_src\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: o\n  22:  Var Pass:      let o = new A()\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: GetData\n  23:  CALL:      __taint_sink(o.GetData())\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: o\n  23:  ARG PASS:      __taint_sink(o.GetData())\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:              return this.#data\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: GetData\n  23:  CALL RETURN:     __taint_sink(o.GetData())\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: __taint_sink\n  23:  SINK:      __taint_sink(o.GetData())\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\nLine 23: __taint_sink(o.GetData())\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\",\"functionName\":\"private_variable_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function private_variable_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: data\n  14:  Var Pass:          #data = __taint_src\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: o\n  22:  Var Pass:      let o = new A()\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: GetData\n  23:  CALL:      __taint_sink(o.GetData())\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: o\n  23:  ARG PASS:      __taint_sink(o.GetData())\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: [return value]\n  16:  Return Value:              return this.#data\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: GetData\n  23:  CALL RETURN:     __taint_sink(o.GetData())\n /jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_001_T\n  AffectedNodeName: __taint_sink\n  23:  SINK:      __taint_sink(o.GetData())\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/variable_scope/private_scope/private_variable_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\nLine 18: __taint_sink(A.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\n  AffectedNodeName: __taint_src\n  23:  SOURCE:  static_variable_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\n  AffectedNodeName: static_variable_001_T\n  23:  CALL:  static_variable_001_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function static_variable_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\n  AffectedNodeName: data\n  15:  Var Pass:      static data = __taint_src\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(A.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\nLine 18: __taint_sink(A.data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\",\"functionName\":\"static_variable_001_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function static_variable_001_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\n  AffectedNodeName: data\n  15:  Var Pass:      static data = __taint_src\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_001_T\n  AffectedNodeName: __taint_sink\n  18:  SINK:    __taint_sink(A.data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_002_F":"======================== Findings ========================\nNo findings!\n==========================================================","/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T":"======================== Findings ========================\n\n------------- 1: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\nLine 28: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\",\"attribute\":\"fullfileManagerMade\",\"type\":\"fileBegin\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: __taint_src\n  37:  SOURCE:  static_variable_003_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: static_variable_003_T\n  37:  CALL:  static_variable_003_T(__taint_src)\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: __taint_src\n  12:  ARG PASS:  function static_variable_003_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: data\n  14:  Var Pass:      static data = __taint_src\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: data\n  27:  Var Pass:        const data = A.data\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:        __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n\n------------- 2: taint_flow_test-------------\nDescription:Test for taint flow.\nFile:/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\nLine 28: __taint_sink(data)\nSINK RULE:__taint_sink\nentrypoint:\n{\"filePath\":\"/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\",\"functionName\":\"static_variable_003_T\",\"attribute\":\"fullCallGraphMade\",\"type\":\"functionCall\",\"funcReceiverType\":\"\"}\nTrace:\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: __taint_src\n  12:  SOURCE:  function static_variable_003_T (__taint_src) {\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: data\n  14:  Var Pass:      static data = __taint_src\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: data\n  27:  Var Pass:        const data = A.data\n /jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_003_T\n  AffectedNodeName: __taint_sink\n  28:  SINK:        __taint_sink(data)\nAdvice:\n\tAvoid flowing the source to the taint sink\n==========================================================\n  #taint_flow_test:2\n==========================================================","/jsbenchmark/completeness/object_tracing/variable_scope/static_variable/static_variable_004_F":"======================== Findings ========================\nNo findings!\n=========================================================="}